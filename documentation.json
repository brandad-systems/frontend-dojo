{
    "pipes": [],
    "interfaces": [
        {
            "name": "User",
            "id": "interface-User-53eb0dc9cd0ab8d418e0d931ca72ca0af53ea036456f01083c6e7bb6c1711cdba8990d50b6256095d27a90e1470269683f7e6aef5dc36323ac5b78e19b145f65",
            "file": "src/stories/User.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface User {\n  name: string;\n  age: number;\n}\n",
            "properties": [
                {
                    "name": "age",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        }
    ],
    "injectables": [
        {
            "name": "SearchService",
            "id": "injectable-SearchService-88eefd3b92a3e475278774f9b5539066d0afff7809be04f041239d5c365aa525d0a2962ad4c40c02da97a584d4099fc863b7269775b332738de6b24e0774c0bd",
            "file": "src/app/sessions/rxjs/lesson-six/user-input/search.service.ts",
            "properties": [
                {
                    "name": "terms",
                    "defaultValue": "[\n    'Gottfried Benn: Nur zwei Dinge',\n    'Bertolt Brecht: Erinnerung an die Marie A.',\n    'Paul Celan: Todesfuge',\n    'Allen Ginsberg: Howl',\n    'Johann Wolfgang von Goethe: Erlkönig, Der Zauberlehrling, Prometheus, Römische Elegien',\n    'Hermann Hesse: Stufen',\n    'Hugo von Hofmannsthal: Gedichte in Terzinen, Ballade des äußeren Lebens',\n    'Friedrich Hölderlin: Hälfte des Lebens, Brod und Wein, Patmos, Hyperions Schicksalslied',\n    'Ernst Jandl: schtzngrmm, wien: heldenplatz',\n    'Matsuo Bashō: Frosch-Haiku',\n    'Edgar Allan Poe: The Raven',\n    'Rainer Maria Rilke: Der Panther, Herbsttag, Duineser Elegien',\n    'Percy Bysshe Shelley: Ozymandias',\n    'Georg Trakl: Grodek',\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "methods": [
                {
                    "name": "search",
                    "args": [
                        {
                            "name": "searchTerm",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<string[]>",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "searchTerm",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { Observable, of, throwError } from 'rxjs';\nimport { delay } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SearchService {\n  terms = [\n    'Gottfried Benn: Nur zwei Dinge',\n    'Bertolt Brecht: Erinnerung an die Marie A.',\n    'Paul Celan: Todesfuge',\n    'Allen Ginsberg: Howl',\n    'Johann Wolfgang von Goethe: Erlkönig, Der Zauberlehrling, Prometheus, Römische Elegien',\n    'Hermann Hesse: Stufen',\n    'Hugo von Hofmannsthal: Gedichte in Terzinen, Ballade des äußeren Lebens',\n    'Friedrich Hölderlin: Hälfte des Lebens, Brod und Wein, Patmos, Hyperions Schicksalslied',\n    'Ernst Jandl: schtzngrmm, wien: heldenplatz',\n    'Matsuo Bashō: Frosch-Haiku',\n    'Edgar Allan Poe: The Raven',\n    'Rainer Maria Rilke: Der Panther, Herbsttag, Duineser Elegien',\n    'Percy Bysshe Shelley: Ozymandias',\n    'Georg Trakl: Grodek',\n  ];\n\n  constructor() {}\n\n  search(searchTerm): Observable<string[]> {\n    console.log('called', new Date());\n    if (Math.random() > 0.5) {\n      return throwError(() => new Error('Suche nicht erfolgreich')).pipe(delay(1500));\n    }\n    const results = this.terms.filter((term) => term.toLowerCase().indexOf(searchTerm.toLowerCase()) > 0);\n    return of(results).pipe(delay(1500));\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 24
            },
            "type": "injectable"
        }
    ],
    "guards": [],
    "interceptors": [],
    "classes": [
        {
            "name": "Lesson",
            "id": "class-Lesson-7c1dbf1c12b7c178c368d2166e22688efddd9e78f850ef818488371882d9641a4035155c0538c8e8c9cf4a780ba46cb07438de281669a7dd0f0f1836af3ffbe2",
            "file": "src/app/models/lesson.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "export class Lesson {\n    title: string;\n    description: string;\n    url: string;\n    type: string;\n}\n",
            "properties": [
                {
                    "name": "description",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "url",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        }
    ],
    "directives": [
        {
            "name": "HighlightCodeDirective",
            "id": "directive-HighlightCodeDirective-0caad4e8cffdee375199e9e6d8b5b921906e5a2d5d5aa19b9f05bdbbdeff3f4e8ebffaded7a1ba8dde2cbb4551cc111d6e4c7fbaad7707f7ef1bffa13e8ff455",
            "file": "src/app/shared/highlight.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import hljs from 'highlight.js/lib/core';\nimport typescript from 'highlight.js/lib/languages/typescript';\nimport javascript from 'highlight.js/lib/languages/javascript';\nimport xml from 'highlight.js/lib/languages/xml';\nhljs.registerLanguage('javascript', javascript);\nhljs.registerLanguage('typescript', typescript);\nhljs.registerLanguage('xml', xml);\nimport { AfterViewInit, Directive, ElementRef } from '@angular/core';\n\n@Directive({\n  selector: 'code[highlight]',\n})\nexport class HighlightCodeDirective implements AfterViewInit {\n  constructor(private elRef: ElementRef) {}\n\n  ngAfterViewInit() {\n    hljs.highlightBlock(this.elRef.nativeElement);\n  }\n}\n",
            "selector": "code[highlight]",
            "providers": [],
            "inputsClass": [],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "implements": [
                "AfterViewInit"
            ],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "elRef",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 13,
                "jsdoctags": [
                    {
                        "name": "elRef",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        }
    ],
    "components": [
        {
            "name": "AmComponentsComponent",
            "id": "component-AmComponentsComponent-b6f63f753297c65244225878547fe75d86a0d655136a8dbec13a1dd7a0f30e6a14e722de9dda835994ca3ecfd086dae57576fb5d72fb00138e009353dc6369f6",
            "file": "src/app/sessions/angular/lesson-five/am-components/am-components.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-am-components",
            "styleUrls": [
                "./am-components.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./am-components.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 11,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-am-components',\n  templateUrl: './am-components.component.html',\n  styleUrls: ['./am-components.component.scss'],\n})\nexport class AmComponentsComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".content-container {\n  margin: 2rem;\n}\n\nbutton {\n  margin-right: 2rem;\n}\n",
                    "styleUrl": "./am-components.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<mat-accordion>\n  <mat-expansion-panel>\n    <mat-expansion-panel-header>\n      <mat-panel-title> Button Component </mat-panel-title>\n    </mat-expansion-panel-header>\n    <div class=\"content-container\">\n      <div class=\"mat-subheading-2\">Buttons:</div>\n      <div>\n        <button mat-button>Click me!</button>\n        <button mat-raised-button>Click me!</button>\n        <button mat-flat-button>Click me!</button>\n        <button mat-stroked-button>Click me!</button>\n      </div>\n    </div>\n\n    <div class=\"content-container\">\n      <div class=\"mat-subheading-2\">Circular Buttons:</div>\n      <div>\n        <button mat-icon-button>Icon</button>\n        <button mat-fab>Fab</button>\n        <button mat-mini-fab>Minifab</button>\n      </div>\n    </div>\n\n    <div class=\"content-container\">\n      <div class=\"mat-subheading-2\">Button Colors:</div>\n      <div>\n        <button color=\"primary\" mat-button>Primary</button>\n        <button color=\"accent\" mat-button>Accent</button>\n        <button color=\"warn\" mat-button>Warning</button>\n        <button color=\"primary\" mat-raised-button>Primary</button>\n        <button color=\"accent\" mat-raised-button>Accent</button>\n        <button color=\"warn\" mat-raised-button>Warning</button>\n      </div>\n    </div>\n  </mat-expansion-panel>\n</mat-accordion>\n"
        },
        {
            "name": "AmOverviewComponent",
            "id": "component-AmOverviewComponent-71dc4ca47ee87f2b752be0ff9295b83bf4f67c206e662b59c1b6143c8ff6342963ff2cc83548604abb7cef4f8c23b2e92c8ee585d395ff2cbc71bfe7113d2f1b",
            "file": "src/app/sessions/angular/lesson-five/am-overview/am-overview.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-am-overview",
            "styleUrls": [
                "./am-overview.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./am-overview.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 11,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-am-overview',\n  templateUrl: './am-overview.component.html',\n  styleUrls: ['./am-overview.component.scss'],\n})\nexport class AmOverviewComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".content-container {\n  display: flex;\n  flex-direction: column;\n  gap: 2rem;\n  padding: 2rem;\n}\n",
                    "styleUrl": "./am-overview.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"content-container\">\n  <div>\n    <mat-list>\n      <h2>Wichtige Links:</h2>\n      <ul>\n        <li><a href=\"https://material.angular.io/\" target=\"_blank\">Documentation</a></li>\n        <li><a href=\"https://material.angular.io/components/categories\" target=\"_blank\">Components overview</a></li>\n        <li><a href=\"https://material.io/\" target=\"_blank\">Material Design</a></li>\n      </ul>\n    </mat-list>\n  </div>\n  <mat-divider></mat-divider>\n  <div>\n    <mat-list>\n      <h2>Install Angular Material</h2>\n      <p>\n        Use the Angular CLI's installation\n        <a href=\"https://material.angular.io/guide/schematics\" target=\"_blank\">schematic</a> to set up your Angular\n        Material project by running the following command:\n      </p>\n      <pre class=\"inline\">\n            <code highlight>ng add @angular/material</code>\n        </pre>\n      <p>\n        The <code>ng add</code> command will install Angular Material, the\n        <a href=\"https://material.angular.io/cdk/categories\" target=\"_blank\">Component Dev Kit (CDK)</a>,\n        <a href=\"https://angular.io/guide/animations\" target=\"_blank\">Angular Animations</a> and ask you the following\n        questions to determine which features to include:\n      </p>\n      <ol>\n        <li>\n          <p>Choose a prebuilt theme name, or \"custom\" for a custom theme:</p>\n          <p>\n            You can choose from\n            <a href=\"https://material.angular.io/guide/theming#using-a-pre-built-theme\" target=\"_blank\"\n              >prebuilt material design themes</a\n            >\n            or set up an extensible\n            <a href=\"https://material.angular.io/guide/theming#defining-a-theme\">custom theme</a>.\n          </p>\n        </li>\n        <li>\n          <p>Set up global Angular Material typography styles:</p>\n          <p>\n            Whether to apply the global\n            <a href=\"https://material.angular.io/guide/typography\" target=\"_blank\">typography</a> styles to your\n            application.\n          </p>\n        </li>\n        <li>\n          <p>Set up browser animations for Angular Material:</p>\n          <p>\n            Importing the\n            <a href=\"https://angular.io/api/platform-browser/animations/BrowserAnimationsModule\" target=\"_blank\"\n              ><code>BrowserAnimationsModule</code></a\n            >\n            into your application enables Angular's <a href=\"https://angular.io/guide/animations\">animation system</a>.\n            Declining this will disable most of Angular Material's animations.\n          </p>\n        </li>\n      </ol>\n      <p>The <code>ng add</code> command will additionally perform the following actions:</p>\n      <ul>\n        <li>Add project dependencies to <code>package.json</code></li>\n        <li>Add the Roboto font to your <code>index.html</code></li>\n        <li>Add the Material Design icon font to your <code>index.html</code></li>\n        <li>\n          Add a few global CSS styles to:\n          <ul>\n            <li>Remove margins from <code>body</code></li>\n            <li>Set <code>height: 100%</code> on <code>html</code> and <code>body</code></li>\n            <li>Set Roboto as the default application font</li>\n          </ul>\n        </li>\n      </ul>\n      <p>You're done! Angular Material is now configured to be used in your application.</p>\n    </mat-list>\n  </div>\n</div>\n"
        },
        {
            "name": "AmTypographyComponent",
            "id": "component-AmTypographyComponent-ee376a4d3f1042981f6c480d0d1e8ca1c15e854f52b821502ffac7c42d8b7bf69989dea6597a0c4c597f63f2a936536832855b72a94d74c3931b6c403cb13ad5",
            "file": "src/app/sessions/angular/lesson-five/am-typography/am-typography.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-am-typography",
            "styleUrls": [
                "./am-typography.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./am-typography.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 11,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-am-typography',\n  templateUrl: './am-typography.component.html',\n  styleUrls: ['./am-typography.component.scss'],\n})\nexport class AmTypographyComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".content-container {\n  margin: 2rem;\n}\n",
                    "styleUrl": "./am-typography.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"content-container\">\n  <div class=\"mat-display-4\">This is display 4</div>\n  <div class=\"mat-display-3\">This is display 3</div>\n  <div class=\"mat-display-2\">This is display 2</div>\n  <div class=\"mat-display-1\">This is display 1</div>\n\n  <div class=\"mat-headline\">This is heading for h1</div>\n  <div class=\"mat-title\">This is heading for h2</div>\n  <div class=\"mat-subheading-2\">This is heading for h3</div>\n  <div class=\"mat-subheading-1\">This is heading for h4</div>\n\n  <div class=\"mat-body-1\">This is body text</div>\n  <div class=\"mat-body-2\">This is bold body text</div>\n  <div class=\"mat-caption\">This is caption text</div>\n</div>\n"
        },
        {
            "name": "AngularComponent",
            "id": "component-AngularComponent-22357d0584b68aa3efeae2cd77408b49ec685bb3fd00fd3c9837aebd5b3bf581c72e87017fc7e2abe778fd919965bd0c217e6e0cff9493b928977089dbb32610",
            "file": "src/app/sessions/angular/angular.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-angular",
            "styleUrls": [
                "./angular.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./angular.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 11,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-angular',\n  templateUrl: './angular.component.html',\n  styleUrls: ['./angular.component.scss'],\n})\nexport class AngularComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./angular.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<router-outlet></router-outlet>\n"
        },
        {
            "name": "AppComponent",
            "id": "component-AppComponent-771654741dfa14248142de55ad5e69ad3579dbc63eb57d3bb2e08f81a7a790362f3d206902fa96324e59b424a5c0f1ce81e898138c0c1cc8a6460aab4e3497ec",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [
                "./app.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "className",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "decorators": [
                        {
                            "name": "HostBinding",
                            "stringifiedArguments": "'class'"
                        }
                    ]
                },
                {
                    "name": "toggleControl",
                    "defaultValue": "new UntypedFormControl(false)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [
                {
                    "name": "class",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "string",
                    "decorators": []
                }
            ],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, HostBinding } from '@angular/core';\nimport { UntypedFormControl } from '@angular/forms';\nimport { MatIconRegistry } from '@angular/material/icon';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  @HostBinding('class') className = '';\n  toggleControl = new UntypedFormControl(false);\n\n  constructor(iconRegistry: MatIconRegistry, sanitizer: DomSanitizer) {\n    iconRegistry.addSvgIcon(\n      'github',\n      sanitizer.bypassSecurityTrustResourceUrl('assets/icons/github-circle-white-transparent.svg')\n    );\n  }\n  ngOnInit(): void {\n    this.toggleControl.valueChanges.subscribe((darkMode) => {\n      const darkClassName = 'my-dark-theme';\n      this.className = darkMode ? darkClassName : '';\n    });\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".brand-name {\n    cursor: pointer;\n}",
                    "styleUrl": "./app.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "iconRegistry",
                        "type": "MatIconRegistry",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "sanitizer",
                        "type": "DomSanitizer",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 13,
                "jsdoctags": [
                    {
                        "name": "iconRegistry",
                        "type": "MatIconRegistry",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "sanitizer",
                        "type": "DomSanitizer",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<mat-toolbar color=\"primary\" class=\"navbar\">\n  <span class=\"brand-name\" routerLink=\"/\">Frontend Dojo</span>\n  <div class=\"links\">\n    <mat-slide-toggle [formControl]=\"toggleControl\" class=\"mr-8\">\n      <mat-icon>dark_mode</mat-icon>\n    </mat-slide-toggle>\n    <a mat-button href=\"https://github.com/brandad-systems/frontend-dojo\">\n      <mat-icon svgIcon=\"github\"></mat-icon>\n      GitHub\n    </a>\n  </div>\n</mat-toolbar>\n\n<router-outlet></router-outlet>\n"
        },
        {
            "name": "ButtonComponent",
            "id": "component-ButtonComponent-4ef205c97a334c309aa4001c8ab4a6d9571dcae18d0e85aaf0d367467ab5d3a9f13ab3573726f1fcb409bc9b49894dadfb80b1bbe1b6ba7041455ad9d4922004",
            "file": "src/stories/button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-button",
            "styleUrls": [
                "./button.css"
            ],
            "styles": [],
            "template": "<button   type=\"button\"\n   (click)=\"onClick.emit($event)\"\n   [ngClass]=\"classes\"\n   [ngStyle]=\"{ 'background-color': backgroundColor }\"\n >\n   {{ label }}\n </button>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "backgroundColor",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nWhat background color to use\n",
                    "description": "<p>What background color to use</p>\n",
                    "line": 26,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "'Button'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "pos": 711,
                            "end": 724,
                            "flags": 4227072,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 325,
                            "tagName": {
                                "pos": 712,
                                "end": 720,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "required"
                            },
                            "comment": ""
                        }
                    ],
                    "rawdescription": "\n\nButton contents\n\n",
                    "description": "<p>Button contents</p>\n",
                    "line": 40,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "primary",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nIs this the principal call to action on the page?\n",
                    "description": "<p>Is this the principal call to action on the page?</p>\n",
                    "line": 20,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "'medium'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nHow large should the button be?\n",
                    "description": "<p>How large should the button be?</p>\n",
                    "line": 32,
                    "type": "\"small\" | \"medium\" | \"large\"",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onClick",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptional click handler\n",
                    "description": "<p>Optional click handler</p>\n",
                    "line": 46,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'storybook-button',\n  template: ` <button\n    type=\"button\"\n    (click)=\"onClick.emit($event)\"\n    [ngClass]=\"classes\"\n    [ngStyle]=\"{ 'background-color': backgroundColor }\"\n  >\n    {{ label }}\n  </button>`,\n  styleUrls: ['./button.css'],\n})\nexport default class ButtonComponent {\n  /**\n   * Is this the principal call to action on the page?\n   */\n  @Input()\n  primary = false;\n\n  /**\n   * What background color to use\n   */\n  @Input()\n  backgroundColor?: string;\n\n  /**\n   * How large should the button be?\n   */\n  @Input()\n  size: 'small' | 'medium' | 'large' = 'medium';\n\n  /**\n   * Button contents\n   *\n   * @required\n   */\n  @Input()\n  label = 'Button';\n\n  /**\n   * Optional click handler\n   */\n  @Output()\n  onClick = new EventEmitter<Event>();\n\n  public get classes(): string[] {\n    const mode = this.primary ? 'storybook-button--primary' : 'storybook-button--secondary';\n\n    return ['storybook-button', `storybook-button--${this.size}`, mode];\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".storybook-button {\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  font-weight: 700;\n  border: 0;\n  border-radius: 3em;\n  cursor: pointer;\n  display: inline-block;\n  line-height: 1;\n}\n.storybook-button--primary {\n  color: white;\n  background-color: #1ea7fd;\n}\n.storybook-button--secondary {\n  color: #333;\n  background-color: transparent;\n  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 0px 1px inset;\n}\n.storybook-button--small {\n  font-size: 12px;\n  padding: 10px 16px;\n}\n.storybook-button--medium {\n  font-size: 14px;\n  padding: 11px 20px;\n}\n.storybook-button--large {\n  font-size: 16px;\n  padding: 12px 24px;\n}\n",
                    "styleUrl": "./button.css"
                }
            ],
            "stylesData": "",
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 48
                    }
                }
            }
        },
        {
            "name": "CssLayoutExampleFlexComponent",
            "id": "component-CssLayoutExampleFlexComponent-b0ecef677025d61748b7baca869a8416e5f148d13e0c793cf9ae8e489ce59b203b62ec4841601b3267ab478e20d450c861b5744f39aaaf31973723f89e46b26c",
            "file": "src/app/lesson-two/css-layout-example-flex/css-layout-example-flex.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-css-layout-example-flex",
            "styleUrls": [
                "./css-layout-example-flex.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./css-layout-example-flex.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-css-layout-example-flex',\n  templateUrl: './css-layout-example-flex.component.html',\n  styleUrls: ['./css-layout-example-flex.component.scss']\n})\nexport class CssLayoutExampleFlexComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".flex-basics {\n    border: 6px solid black;\n\n    .card {\n        background-color: mediumaquamarine;\n    }\n}\n\n.flex-alignments {\n    border: 6px solid black;\n\n    display: flex;\n    gap: 2rem;\n    align-items: center;\n\n    .card {\n        flex: 1;\n        background-color: mediumaquamarine;\n    }\n\n    .card:nth-child(1) {\n        align-self: flex-end;\n    }\n\n    .card:nth-child(2) {\n        align-self: flex-start;\n    }\n}\n\n.flex-wrap {\n    border: 6px solid black;\n\n    display: flex;\n    flex-wrap: wrap;\n    gap: 2rem;\n    align-items: center;\n\n    .card {\n        width: 400px;\n        background-color: mediumaquamarine;\n    }\n\n    .card:nth-child(1) {\n        align-self: flex-end;\n    }\n\n    .card:nth-child(2) {\n        align-self: flex-start;\n    }\n}",
                    "styleUrl": "./css-layout-example-flex.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<h1>Flexbox Basics</h1>\n\n<div class=\"flex-basics\">\n  <div class=\"card\">\n    <h3>Card one</h3>\n    <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed.</p>\n  </div>\n  <div class=\"card\">\n    <h3>Card two</h3>\n    <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed.</p>\n  </div>\n  <div class=\"card\">\n    <h3>Card three</h3>\n    <p>Lorem ipsum dolor sit amet, consectetur. Lorem ipsum dolor sit amet, consectetur. Lorem ipsum dolor sit amet, consectetur. adipiscing elit, sed. Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed. Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed.</p>\n  </div>\n</div>\n\n<br><br>\n\n<h1>Flexbox Alignments</h1>\n\n<div class=\"flex-alignments\">\n  <div class=\"card\">\n    <h3>Card one</h3>\n    <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed.</p>\n  </div>\n  <div class=\"card\">\n    <h3>Card two</h3>\n    <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed.</p>\n  </div>\n  <div class=\"card\">\n    <h3>Card three</h3>\n    <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed. Asta adipiscing elit. Lorem ipsum dolor sit amet, consectetur. Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed. Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed.</p>\n  </div>\n</div>\n\n<br><br>\n\n<h1>Flexbox Wrap</h1>\n\n<div class=\"flex-wrap\">\n  <div class=\"card\">\n    <h3>Card one</h3>\n    <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed.</p>\n  </div>\n  <div class=\"card\">\n    <h3>Card two</h3>\n    <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed.</p>\n  </div>\n  <div class=\"card\">\n    <h3>Card three</h3>\n    <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed. Asta adipiscing elit. Lorem ipsum dolor sit amet, consectetur. Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed. Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed.</p>\n  </div>\n</div>"
        },
        {
            "name": "CssLayoutExampleGridComponent",
            "id": "component-CssLayoutExampleGridComponent-3c6aff7405665ab08508e02349cc967e2924119d6b76a3abbac2263506e76f92cfcf1edb9426b7e6c6ae7d9289ae09c3ed94e12b2869bed3c51f8930dcc91de9",
            "file": "src/app/lesson-two/css-layout-example-grid/css-layout-example-grid.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-css-layout-example-grid",
            "styleUrls": [
                "./css-layout-example-grid.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./css-layout-example-grid.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-css-layout-example-grid',\n  templateUrl: './css-layout-example-grid.component.html',\n  styleUrls: ['./css-layout-example-grid.component.scss']\n})\nexport class CssLayoutExampleGridComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".grid-basics {\n    border: 6px solid black;\n\n    display: grid;\n    gap: 2rem;\n    grid-template-columns: repeat(4, 1fr);\n\n    .card {\n        background-color: khaki;\n    }\n\n    .one {\n        grid-column: span 2;\n    }\n\n    .four {\n        grid-column: span 2;\n    }\n\n    .five {\n        grid-column-start: 4;\n        grid-row-start: 1;\n        grid-row-end: 3;\n    }\n}\n\n.grid-area {\n    border: 6px solid black;\n\n    display: grid;\n    gap: 2rem;\n    grid-auto-columns: 1fr;\n    grid-template-areas: \n        'one one two five'\n        'three four four five';\n\n    .card {\n        background-color: khaki;\n    }\n\n    .one {\n        grid-area: one;\n    }\n    \n    .two {\n        grid-area: two;\n    }\n    \n    .three {\n        grid-area: three;\n    }\n    \n    .four {\n        grid-area: four;\n    }\n    \n    .five {\n        grid-area: five;\n    }\n}",
                    "styleUrl": "./css-layout-example-grid.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<h1>Grid Basics</h1>\n\n<div class=\"grid-basics\">\n  <div class=\"card one\">\n    <h3>Card one</h3>\n    <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed.</p>\n  </div>\n  <div class=\"card two\">\n    <h3>Card two</h3>\n    <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed.</p>\n  </div>\n  <div class=\"card three\">\n    <h3>Card three</h3>\n    <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed.</p>\n  </div>\n  <div class=\"card four\">\n    <h3>Card four</h3>\n    <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed.</p>\n  </div>\n  <div class=\"card five\">\n    <h3>Card five</h3>\n    <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed.</p>\n  </div>\n</div>\n\n<br><br>\n\n<h1>Grid Area</h1>\n\n<div class=\"grid-area\">\n  <div class=\"card one\">\n    <h3>Card one</h3>\n    <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed.</p>\n  </div>\n  <div class=\"card two\">\n    <h3>Card two</h3>\n    <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed.</p>\n  </div>\n  <div class=\"card three\">\n    <h3>Card three</h3>\n    <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed.</p>\n  </div>\n  <div class=\"card four\">\n    <h3>Card four</h3>\n    <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed.</p>\n  </div>\n  <div class=\"card five\">\n    <h3>Card five</h3>\n    <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed.</p>\n  </div>\n</div>"
        },
        {
            "name": "DojocardComponent",
            "id": "component-DojocardComponent-65071d20adb13a8abc8c57fe54df26d6b3e5b0b7454c12315bd3fc0aacf0adfbeaf0e5108a99506f40523f226204315a6a48cfc5cbf86bfac85d97a5dd90802e",
            "file": "src/app/shared/dojocard/dojocard.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-dojocard",
            "styleUrls": [
                "./dojocard.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./dojocard.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "subtitle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "string | undefined",
                    "decorators": []
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string | undefined",
                    "decorators": []
                },
                {
                    "name": "user",
                    "defaultValue": "{\n    name: undefined,\n    age: undefined,\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "User | undefined",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\nimport { User } from '../../../stories/User';\n\n@Component({\n  selector: 'app-dojocard',\n  templateUrl: './dojocard.component.html',\n  styleUrls: ['./dojocard.component.scss'],\n})\nexport class DojocardComponent implements OnInit {\n  @Input()\n  title: string | undefined;\n  @Input()\n  subtitle: string | undefined;\n  @Input()\n  user: User | undefined = {\n    name: undefined,\n    age: undefined,\n  };\n\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./dojocard.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 18
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<mat-card>\n  <mat-card-header>\n    <mat-card-title>{{ title }}</mat-card-title>\n    <mat-card-subtitle *ngIf=\"subtitle\">{{ subtitle }}</mat-card-subtitle>\n  </mat-card-header>\n  <mat-card-content>\n    {{ user | json }}<br />\n    <ng-content select=\"[content]\"></ng-content>\n  </mat-card-content>\n  <mat-card-actions>\n    <ng-content select=\"[actions]\"></ng-content>\n  </mat-card-actions>\n</mat-card>\n"
        },
        {
            "name": "DojoCounterComponent",
            "id": "component-DojoCounterComponent-8f7525dd7852ad45e1aac67a89a114fcfb576a8a7d394c183e91ccd802b34de28ed2953e3d0de1c867105b1767667658b94eba7c334d0bd77d353bca767c1168",
            "file": "src/app/shared/dojo-counter/dojo-counter.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-dojo-counter",
            "styleUrls": [
                "./dojo-counter.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./dojo-counter.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "counter",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 10
                }
            ],
            "methodsClass": [
                {
                    "name": "decrement",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "increment",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-dojo-counter',\n  templateUrl: './dojo-counter.component.html',\n  styleUrls: ['./dojo-counter.component.css']\n})\nexport class DojoCounterComponent {\n\n  counter: number = 0;\n\n  increment() {\n    this.counter++;\n  }\n\n  decrement() {\n    this.counter--;\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./dojo-counter.component.css"
                }
            ],
            "stylesData": "",
            "templateData": "<p>\n  {{ counter }}\n</p>\n\n<button mat-button (click)=\"increment()\">Increment</button>\n<button mat-button (click)=\"decrement()\">Decrement</button>\n"
        },
        {
            "name": "HeaderComponent",
            "id": "component-HeaderComponent-5ef0673246e6fcb8535b18069dd72a2ee4eed9f044b9c256a75ca3c8ab525a641578ee3c5b450137ecdc2752c900546b12b6705c327330246a56864c37438323",
            "file": "src/stories/header.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-header",
            "styleUrls": [
                "./header.css"
            ],
            "styles": [],
            "template": "<header>    <div class=\"wrapper\">\n      <div>\n        <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path d=\"M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z\" fill=\"#FFF\" />\n            <path d=\"M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z\" fill=\"#555AB9\" />\n            <path d=\"M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z\" fill=\"#91BAF8\" />\n          </g>\n        </svg>\n        <h1>Acme</h1>\n      </div>\n      <div>\n        <div *ngIf=\"user\">\n          <span class=\"welcome\">\n            Welcome, <b>{{ user.name }}</b\n            >!\n          </span>\n          <storybook-button\n            *ngIf=\"user\"\n            size=\"small\"\n            (onClick)=\"onLogout.emit($event)\"\n            label=\"Log out\"\n          ></storybook-button>\n        </div>\n        <div *ngIf=\"!user\">\n          <storybook-button\n            *ngIf=\"!user\"\n            size=\"small\"\n            class=\"margin-left\"\n            (onClick)=\"onLogin.emit($event)\"\n            label=\"Log in\"\n          ></storybook-button>\n          <storybook-button\n            *ngIf=\"!user\"\n            primary\n            size=\"small\"\n            primary=\"true\"\n            class=\"margin-left\"\n            (onClick)=\"onCreateAccount.emit($event)\"\n            label=\"Sign up\"\n          ></storybook-button>\n        </div>\n      </div>\n    </div>\n  </header>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "user",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 56,
                    "type": "User | null",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onCreateAccount",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 65,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogin",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 59,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogout",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 62,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { User } from './User';\n\n@Component({\n  selector: 'storybook-header',\n  template: `<header>\n    <div class=\"wrapper\">\n      <div>\n        <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path d=\"M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z\" fill=\"#FFF\" />\n            <path d=\"M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z\" fill=\"#555AB9\" />\n            <path d=\"M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z\" fill=\"#91BAF8\" />\n          </g>\n        </svg>\n        <h1>Acme</h1>\n      </div>\n      <div>\n        <div *ngIf=\"user\">\n          <span class=\"welcome\">\n            Welcome, <b>{{ user.name }}</b\n            >!\n          </span>\n          <storybook-button\n            *ngIf=\"user\"\n            size=\"small\"\n            (onClick)=\"onLogout.emit($event)\"\n            label=\"Log out\"\n          ></storybook-button>\n        </div>\n        <div *ngIf=\"!user\">\n          <storybook-button\n            *ngIf=\"!user\"\n            size=\"small\"\n            class=\"margin-left\"\n            (onClick)=\"onLogin.emit($event)\"\n            label=\"Log in\"\n          ></storybook-button>\n          <storybook-button\n            *ngIf=\"!user\"\n            primary\n            size=\"small\"\n            primary=\"true\"\n            class=\"margin-left\"\n            (onClick)=\"onCreateAccount.emit($event)\"\n            label=\"Sign up\"\n          ></storybook-button>\n        </div>\n      </div>\n    </div>\n  </header>`,\n  styleUrls: ['./header.css'],\n})\nexport default class HeaderComponent {\n  @Input()\n  user: User | null = null;\n\n  @Output()\n  onLogin = new EventEmitter<Event>();\n\n  @Output()\n  onLogout = new EventEmitter<Event>();\n\n  @Output()\n  onCreateAccount = new EventEmitter<Event>();\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".wrapper {\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.1);\n  padding: 15px 20px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n}\n\nsvg {\n  display: inline-block;\n  vertical-align: top;\n}\n\nh1 {\n  font-weight: 900;\n  font-size: 20px;\n  line-height: 1;\n  margin: 6px 0 6px 10px;\n  display: inline-block;\n  vertical-align: top;\n}\n\nbutton + button {\n  margin-left: 10px;\n}\n\n.welcome {\n  color: #333;\n  font-size: 14px;\n  margin-right: 10px;\n}\n",
                    "styleUrl": "./header.css"
                }
            ],
            "stylesData": ""
        },
        {
            "name": "HomeComponent",
            "id": "component-HomeComponent-fae3e15d0aba91a554b743e6ef581e810bba7da7af7818fca75a4e430b0ce9ec4834ae5ca8dbc5c4007b9d43865e907432d90f873985475fe83fb6d8b7816054",
            "file": "src/app/home/home.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-home",
            "styleUrls": [
                "./home.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./home.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "lessons",
                    "defaultValue": "[\n    {\n      title: 'Angular: Forms',\n      description: 'Template Driven VS. Reactive',\n      url: 'session/angular/forms',\n      type: 'angular',\n    },\n    {\n      title: 'CSS: Layout',\n      description: 'Grid & Flexbox',\n      url: 'session/css/grid-and-flexbox',\n      type: 'css3',\n    },\n    {\n      title: 'RxJs: Observables',\n      description: 'Observables all the way down',\n      url: 'session/rxjs/observables',\n      type: 'rxjs',\n    },\n    {\n      title: 'Angular Animations',\n      description: 'Animationen mit @angular/animations',\n      url: 'session/angular/animations',\n      type: 'angular',\n    },\n    {\n      title: 'Angular Material',\n      description: 'Getting started with Angular Material',\n      url: 'session/angular/material',\n      type: 'angular',\n    },\n    {\n      title: 'Observable Operators',\n      description: 'Nützliche Operatoren und Anwendungszwecke',\n      url: 'session/rxjs/operators',\n      type: 'angular',\n    },\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Lesson[]",
                    "optional": false,
                    "description": "",
                    "line": 12
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { Lesson } from '../models/lesson.model';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss'],\n})\nexport class HomeComponent {\n  constructor() {}\n\n  lessons: Lesson[] = [\n    {\n      title: 'Angular: Forms',\n      description: 'Template Driven VS. Reactive',\n      url: 'session/angular/forms',\n      type: 'angular',\n    },\n    {\n      title: 'CSS: Layout',\n      description: 'Grid & Flexbox',\n      url: 'session/css/grid-and-flexbox',\n      type: 'css3',\n    },\n    {\n      title: 'RxJs: Observables',\n      description: 'Observables all the way down',\n      url: 'session/rxjs/observables',\n      type: 'rxjs',\n    },\n    {\n      title: 'Angular Animations',\n      description: 'Animationen mit @angular/animations',\n      url: 'session/angular/animations',\n      type: 'angular',\n    },\n    {\n      title: 'Angular Material',\n      description: 'Getting started with Angular Material',\n      url: 'session/angular/material',\n      type: 'angular',\n    },\n    {\n      title: 'Observable Operators',\n      description: 'Nützliche Operatoren und Anwendungszwecke',\n      url: 'session/rxjs/operators',\n      type: 'angular',\n    },\n  ];\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".card {\n  aspect-ratio: 16 / 9;\n  min-width: 300px;\n  display: flex;\n  flex-direction: column;\n}\n\nmat-card-content {\n  flex-grow: 1;\n}\n\n.container {\n  display: flex;\n  flex-wrap: wrap;\n  gap: 2rem;\n  padding: 2rem;\n}\n\na {\n  text-decoration: none;\n}\n\n.avatar {\n  background-size: contain;\n  background-position: center;\n  background-repeat: no-repeat;\n  width: 40px;\n  height: 40px;\n  border-radius: 0;\n}\n\n.avatar.angular {\n  background-image: url('../../assets/icons/angular.png');\n}\n\n.avatar.html5 {\n  background-image: url('../../assets/icons/html5.png');\n}\n\n.avatar.css3 {\n  background-image: url('../../assets/icons/css3.png');\n}\n\n.avatar.rxjs {\n  background-image: url('../../assets/icons/rx_logo.png');\n}\n\nmat-card-content {\n  margin-top: 16px;\n}\n",
                    "styleUrl": "./home.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 9
            },
            "templateData": "<div class=\"container full-bleed\">\n  <a *ngFor=\"let lesson of lessons; let i = index\" [routerLink]=\"lesson.url\">\n    <mat-card class=\"card\">\n      <mat-card-header>\n        <div mat-card-avatar class=\"avatar\" [ngClass]=\"lesson.type\"></div>\n        <mat-card-title>{{ lesson.title }}</mat-card-title>\n      </mat-card-header>\n      <mat-card-content>\n        {{ lesson.description }}\n      </mat-card-content>\n      <mat-card-actions align=\"end\">\n        <button mat-button>Ansehen</button>\n      </mat-card-actions>\n    </mat-card>\n  </a>\n</div>\n"
        },
        {
            "name": "LessonFiveComponent",
            "id": "component-LessonFiveComponent-3d0bc0de0e7bd8491bd42ff2b050b4add7f7bfd8987b3365e3a8ff6dd7f436d82119a4a17b59228bcd909ea13b008edce1c153ceedd0f59124b7e4df6d768d44",
            "file": "src/app/sessions/angular/lesson-five/lesson-five.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-lesson-five",
            "styleUrls": [
                "./lesson-five.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./lesson-five.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 11,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-lesson-five',\n  templateUrl: './lesson-five.component.html',\n  styleUrls: ['./lesson-five.component.scss'],\n})\nexport class LessonFiveComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./lesson-five.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<mat-toolbar class=\"navbar\">\n  <div>Angular Material</div>\n  <div>\n    <button mat-button [routerLink]=\"'am-overview'\">Overview</button>\n    <button mat-button [routerLink]=\"'am-typography'\">Typography</button>\n    <button mat-button [routerLink]=\"'am-components'\">Components</button>\n  </div>\n</mat-toolbar>\n\n<router-outlet></router-outlet>\n"
        },
        {
            "name": "LessonFourComponent",
            "id": "component-LessonFourComponent-d8cf556cef71464942575468d4a58f9888d2bdf687bf20df2558487466eebadb29aca6b497ce16710ab81745e99ed85d7b36165395c241856cc9c8eb8330c5a8",
            "file": "src/app/sessions/angular/lesson-four/lesson-four.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-lesson-four",
            "styleUrls": [
                "./lesson-four.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./lesson-four.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 11,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-lesson-four',\n  templateUrl: './lesson-four.component.html',\n  styleUrls: ['./lesson-four.component.scss'],\n})\nexport class LessonFourComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit() {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".main {\n  padding: 2rem;\n}\n",
                    "styleUrl": "./lesson-four.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"main\">\n  <h1>Angular Animations</h1>\n\n  <app-simple-animation></app-simple-animation>\n  <br />\n  <br />\n  <br />\n  <app-multi-step-animation></app-multi-step-animation>\n  <br />\n  <br />\n  <br />\n  <app-sequential-animation></app-sequential-animation>\n</div>\n"
        },
        {
            "name": "LessonOneComponent",
            "id": "component-LessonOneComponent-645f944a8f472cfc22fdadd956882c7cea10ed402b0bc17e9789c181ca419c266e9b3e0c47c4bfc3afbf81822abd3df431cc8bcae798d4fec84bcd7c735f0de6",
            "file": "src/app/sessions/angular/lesson-one/lesson-one.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-lesson-one",
            "styleUrls": [
                "./lesson-one.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./lesson-one.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 11,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-lesson-one',\n  templateUrl: './lesson-one.component.html',\n  styleUrls: ['./lesson-one.component.scss'],\n})\nexport class LessonOneComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit() {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./lesson-one.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<h1>Template Driven VS. Reactive Forms</h1>\n<app-template-driven></app-template-driven>\n<app-reactive></app-reactive>\n<app-template-driven-form-array-like> </app-template-driven-form-array-like>\n<app-reactive-form-array></app-reactive-form-array>\n"
        },
        {
            "name": "LessonSixComponent",
            "id": "component-LessonSixComponent-6066af6204e96cb4cb8f038e83e4a51db5350b9a7dd0778b3dbea92d866392a4aa91513ce7be4a03b476dd8efa848f1a43e971af5941ea3ae958a500ab7ceb97",
            "file": "src/app/sessions/rxjs/lesson-six/lesson-six.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-lesson-six",
            "styleUrls": [
                "./lesson-six.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./lesson-six.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 11,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-lesson-six',\n  templateUrl: './lesson-six.component.html',\n  styleUrls: ['./lesson-six.component.scss'],\n})\nexport class LessonSixComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./lesson-six.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<mat-toolbar class=\"navbar\">\n  <div>Observable Operators</div>\n  <div>\n    <button mat-button routerLinkActive=\"mat-primary\" [routerLink]=\"'operators-overview'\">Overview</button>\n    <button mat-button routerLinkActive=\"mat-primary\" [routerLink]=\"'routing'\">Routing</button>\n    <button mat-button routerLinkActive=\"mat-primary\" [routerLink]=\"'user-input'\">User Input</button>\n    <button mat-button routerLinkActive=\"mat-primary\" [routerLink]=\"'rbac'\">RBAC</button>\n    <button mat-button routerLinkActive=\"mat-primary\" [routerLink]=\"'save-indicator'\">Save Indicator</button>\n  </div>\n</mat-toolbar>\n<div class=\"container pt-20 pb-200\">\n  <router-outlet></router-outlet>\n</div>\n"
        },
        {
            "name": "LessonThreeComponent",
            "id": "component-LessonThreeComponent-3f53c2f431712c5860ee5227e763bab89c5723c1327710fff0af6839455d07147d96077e0d24600dafb87a539fdd4ac8522280bf787d53d803ca8a37789e027e",
            "file": "src/app/sessions/rxjs/lesson-three/lesson-three.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-lesson-three",
            "styleUrls": [
                "./lesson-three.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./lesson-three.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "myObservable$",
                    "defaultValue": "new Observable((observer) => {\n    console.log('observable started');\n    observer.next(42);\n    observer.next(100);\n    observer.next(200);\n\n    setTimeout(() => {\n      observer.next(300); // happens asynchronously\n    }, 1000);\n\n    // observer.error('When error is hit the observable stops emitting');\n\n    setTimeout(() => {\n      observer.complete();\n      observer.error('When error is hit the observable stops emitting');\n    }, 1500);\n\n    setTimeout(() => {\n      observer.next(400);\n    }, 2000);\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 10
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-lesson-three',\n  templateUrl: './lesson-three.component.html',\n  styleUrls: ['./lesson-three.component.scss'],\n})\nexport class LessonThreeComponent implements OnInit {\n  myObservable$ = new Observable((observer) => {\n    console.log('observable started');\n    observer.next(42);\n    observer.next(100);\n    observer.next(200);\n\n    setTimeout(() => {\n      observer.next(300); // happens asynchronously\n    }, 1000);\n\n    // observer.error('When error is hit the observable stops emitting');\n\n    setTimeout(() => {\n      observer.complete();\n      observer.error('When error is hit the observable stops emitting');\n    }, 1500);\n\n    setTimeout(() => {\n      observer.next(400);\n    }, 2000);\n  });\n\n  constructor() {}\n\n  ngOnInit() {\n    this.myObservable$.subscribe((value) => {\n      console.log(value);\n    });\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./lesson-three.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 30
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<h3>\n  <a href=\"https://reactivex.io/documentation/observable.html\">Observables</a>\n</h3>\n"
        },
        {
            "name": "LessonTwoComponent",
            "id": "component-LessonTwoComponent-ed9e6c9546dae8e496a98fb966d428f38e0e50c4ca7d3f1cc56701b22cfeea5b661f39eb86aadf0bf9f4ced63a511aab8628fa3ae21b5542aef688ed8cad9bf6",
            "file": "src/app/lesson-two/lesson-two.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-lesson-two",
            "styleUrls": [
                "./lesson-two.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./lesson-two.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-lesson-two',\n  templateUrl: './lesson-two.component.html',\n  styleUrls: ['./lesson-two.component.scss']\n})\nexport class LessonTwoComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".main {\n    padding: 2rem;\n}",
                    "styleUrl": "./lesson-two.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"main\">\n  <app-css-layout-example-flex></app-css-layout-example-flex>\n  <br><br>\n  <app-css-layout-example-grid></app-css-layout-example-grid>\n</div>"
        },
        {
            "name": "MultiStepAnimationComponent",
            "id": "component-MultiStepAnimationComponent-37c609d4ff17e9b371d0b3ea1a2a11da3e2e0dc1ae62e5cecc69e7c02188b9b2776d431d267f07c5af9769abd7e0640b184a1c51f5f76153245b716f9e603776",
            "file": "src/app/sessions/angular/lesson-four/multi-step-animation/multi-step-animation.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-multi-step-animation",
            "styleUrls": [
                "./multi-step-animation.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./multi-step-animation.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "currentStep",
                    "defaultValue": "MultiStepEnum.FIRST",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 47,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "stepCounter",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 46,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "animateCube",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 49,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { trigger, state, style, animate, transition } from '@angular/animations';\n\nenum MultiStepEnum {\n  FIRST = 'first',\n  SECOND = 'second',\n  THIRD = 'third',\n  FOURTH = 'fourth',\n}\n\n@Component({\n  selector: 'app-multi-step-animation',\n  templateUrl: './multi-step-animation.component.html',\n  styleUrls: ['./multi-step-animation.component.scss'],\n  animations: [\n    trigger('stepTrigger', [\n      state(\n        'first',\n        style({\n          transform: 'translateX(0)',\n        })\n      ),\n      state(\n        'second',\n        style({\n          transform: 'translateX(200px) rotate(30deg)',\n        })\n      ),\n      state(\n        'third',\n        style({\n          transform: 'translateX(400px) rotate(-50deg)',\n        })\n      ),\n      state(\n        'fourth',\n        style({\n          transform: 'translateX(600px) rotate(360deg)',\n        })\n      ),\n      transition('* => *', [animate('0.5s')]),\n    ]),\n  ],\n})\nexport class MultiStepAnimationComponent {\n  public stepCounter = 0;\n  public currentStep = MultiStepEnum.FIRST;\n\n  animateCube() {\n    switch (this.stepCounter) {\n      case 0:\n        this.currentStep = MultiStepEnum.SECOND;\n        this.stepCounter++;\n        break;\n      case 1:\n        this.currentStep = MultiStepEnum.THIRD;\n        this.stepCounter++;\n        break;\n      case 2:\n        this.currentStep = MultiStepEnum.FOURTH;\n        this.stepCounter++;\n        break;\n      case 3:\n        this.currentStep = MultiStepEnum.FIRST;\n        this.stepCounter = 0;\n        break;\n    }\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".cube {\n  height: 254px;\n  width: 254px;\n  background-color: aquamarine;\n}\n",
                    "styleUrl": "./multi-step-animation.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<h2>Multi Step Animation</h2>\n\n<div [@stepTrigger]=\"currentStep\" class=\"cube\"></div>\n<br />\n<button (click)=\"animateCube()\">Animate it!</button>\n"
        },
        {
            "name": "OperatorsOverviewComponent",
            "id": "component-OperatorsOverviewComponent-8ecab0f2a5d7ee823ff409f29d34c6256788ff12b58d064afbbc3d4683d73669d143512133a128ae70b397ed590c7b188a6fcd7d52901915cc8fdd8a6b9bc72c",
            "file": "src/app/sessions/rxjs/lesson-six/operators-overview/operators-overview.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-operators-overview",
            "styleUrls": [
                "./operators-overview.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./operators-overview.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "snippet",
                    "defaultValue": "{\n    observable: `observer = {\n    next: x => console.log('Observer got a next value: ' + x),\n    error: err => console.error('Observer got an error: ' + err),\n    complete: () => console.log('Observer got a complete notification'),\n};\n\nobservable = of([1, 2, 3, 4]).pipe(\n  map(number => number * 2)\n);\n\nsubscription = observable.subscribe(observer)\n\nsubject = new BehaviorSubject('startValue')\n\nthis.subject.next('anotherValue')\n\nobservableFromSubject = subject.asObservable()\n`,\n\n    promise: `// promise wird einmal ausgeführt\nobservableFromPromise = of(promise)\n\n// promise wird für jeden Subscriber ausgeführt\ncoldObservableFromPromise = defer(() => promise)\n\n// auch andere Operatoren nehmen Promises an\nobservable = forkJoin([\n  of(1, 2, 3, 4),\n  Promise.resolve(8),\n  timer(4000)\n]);\n\n// Observable zu einem Promise wandeln mit dem letzten im Observable ausgegebenen Wert\npromise = lastValueFrom(observable)\n\n// Observable zu einem Promise wandeln mit dem ersten im Observable ausgegebenen Wert\npromise = firstValueFrom(observable)\n`,\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 52,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-operators-overview',\n  templateUrl: './operators-overview.component.html',\n  styleUrls: ['./operators-overview.component.scss'],\n})\nexport class OperatorsOverviewComponent implements OnInit {\n  snippet = {\n    observable: `observer = {\n    next: x => console.log('Observer got a next value: ' + x),\n    error: err => console.error('Observer got an error: ' + err),\n    complete: () => console.log('Observer got a complete notification'),\n};\n\nobservable = of([1, 2, 3, 4]).pipe(\n  map(number => number * 2)\n);\n\nsubscription = observable.subscribe(observer)\n\nsubject = new BehaviorSubject('startValue')\n\nthis.subject.next('anotherValue')\n\nobservableFromSubject = subject.asObservable()\n`,\n\n    promise: `// promise wird einmal ausgeführt\nobservableFromPromise = of(promise)\n\n// promise wird für jeden Subscriber ausgeführt\ncoldObservableFromPromise = defer(() => promise)\n\n// auch andere Operatoren nehmen Promises an\nobservable = forkJoin([\n  of(1, 2, 3, 4),\n  Promise.resolve(8),\n  timer(4000)\n]);\n\n// Observable zu einem Promise wandeln mit dem letzten im Observable ausgegebenen Wert\npromise = lastValueFrom(observable)\n\n// Observable zu einem Promise wandeln mit dem ersten im Observable ausgegebenen Wert\npromise = firstValueFrom(observable)\n`,\n  };\n\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./operators-overview.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 48
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<h1>Observables</h1>\n\n<p>\n  Reaktive Muster helfen uns in einer asynchronen Welt besser mit Datenänderungen umzugehen. RxJS bestehen im Grunde aus\n  diesen Teilen:\n</p>\n<ul>\n  <li>Observable: represents the idea of an invokable collection of future values or events.</li>\n  <li>Observer: is a collection of callbacks that knows how to listen to values delivered by the Observable.</li>\n  <li>Subscription: represents the execution of an Observable, is primarily useful for cancelling the execution.</li>\n  <li>\n    Operators: are pure functions that enable a functional programming style of dealing with collections with operations\n    like map, filter, concat, reduce, etc.\n  </li>\n  <li>\n    Subject: is equivalent to an EventEmitter, and the only way of multicasting a value or event to multiple Observers.\n  </li>\n  <li>\n    Schedulers: are centralized dispatchers to control concurrency, allowing us to coordinate when computation happens\n    on e.g. setTimeout or requestAnimationFrame or others.\n  </li>\n</ul>\n<p>\n  Durch den Einsatz von Observables können wir die Performance unserer App auch erheblich steigern, da wir nicht mehr\n  auf die reguläre Changedetection angewiesen sind, sondern unsere Komponenten auf das 'onPush' Prinzip umstellen\n  können.\n</p>\n\n<pre>\n  <code highlight>{{ snippet.observable }}</code>\n</pre>\n\n<h2>Nützliche Operatoren</h2>\n\n<div style=\"display: flex; gap: 20px; flex-wrap: wrap\">\n  <div>\n    <h3>Erzeugend</h3>\n    <ul>\n      <li><app-rx-link name=\"fromEvent\" type=\"creation\"></app-rx-link></li>\n      <li><app-rx-link name=\"of\" type=\"creation\"></app-rx-link></li>\n      <li><app-rx-link name=\"interval\" type=\"creation\"></app-rx-link></li>\n      <li><app-rx-link name=\"defer\" type=\"creation\"></app-rx-link></li>\n    </ul>\n  </div>\n  <div>\n    <h3>Kombinierend</h3>\n    <ul>\n      <li><app-rx-link name=\"combineLatest\" type=\"combination\"></app-rx-link></li>\n      <li><app-rx-link name=\"merge\" type=\"combination\"></app-rx-link></li>\n      <li><app-rx-link name=\"withLatestFrom\" type=\"combination\"></app-rx-link></li>\n    </ul>\n  </div>\n  <div>\n    <h3>Filtern</h3>\n    <ul>\n      <li><app-rx-link name=\"filter\" type=\"filtering\"></app-rx-link></li>\n      <li><app-rx-link name=\"distinctUntilChanged\" type=\"filtering\"></app-rx-link></li>\n      <li><app-rx-link name=\"debounceTime\" type=\"filtering\"></app-rx-link></li>\n      <li><app-rx-link name=\"take\" type=\"filtering\"></app-rx-link></li>\n    </ul>\n  </div>\n  <div>\n    <h3>Transformation</h3>\n    <ul>\n      <li><app-rx-link name=\"map\" type=\"transformation\"></app-rx-link></li>\n      <li><app-rx-link name=\"pluck\" type=\"transformation\"></app-rx-link></li>\n      <li><app-rx-link name=\"mergeMap\" type=\"transformation\"></app-rx-link></li>\n      <li><app-rx-link name=\"switchMap\" type=\"transformation\"></app-rx-link></li>\n    </ul>\n  </div>\n  <div>\n    <h3>Error Handling</h3>\n    <ul>\n      <li><app-rx-link name=\"catchError\" type=\"error_handling\"></app-rx-link></li>\n      <li><app-rx-link name=\"retry\" type=\"error_handling\"></app-rx-link></li>\n      <li><app-rx-link name=\"retryWhen\" type=\"error_handling\"></app-rx-link></li>\n    </ul>\n  </div>\n</div>\n<h2>Umgang mit Promises</h2>\n\n<p>\n  Viele Operatoren nehmen auch Promises an und verarbeiten diese. Aber manchmal möchte man mehr Kontrolle über den\n  Ausführungszeitpunkt haben. Observables können auch wieder zu einem Promise gewandelt werden.\n</p>\n\n<pre>\n  <code highlight>{{ snippet.promise }}</code>\n</pre>\n"
        },
        {
            "name": "PageComponent",
            "id": "component-PageComponent-04d9c29302779d876d1e823f64f41d207df3a296f6138983d6877144533b96e8e7cd24745d926ba05cfb25da363f28023a0248822b2aa51d2ab26f8ac78d57f0",
            "file": "src/stories/page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-page",
            "styleUrls": [
                "./page.css"
            ],
            "styles": [],
            "template": "<article>    <storybook-header\n      [user]=\"user\"\n      (onLogout)=\"doLogout()\"\n      (onLogin)=\"doLogin()\"\n      (onCreateAccount)=\"doCreateAccount()\"\n    ></storybook-header>\n    <section>\n      <h2>Pages in Storybook</h2>\n      <p>\n        We recommend building UIs with a\n        <a href=\"https://componentdriven.org\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <strong>component-driven</strong>\n        </a>\n        process starting with atomic components and ending with pages.\n      </p>\n      <p>\n        Render pages with mock data. This makes it easy to build and review page states without needing to navigate to\n        them in your app. Here are some handy patterns for managing page data in Storybook:\n      </p>\n      <ul>\n        <li>\n          Use a higher-level connected component. Storybook helps you compose such data from the \"args\" of child\n          component stories\n        </li>\n        <li>\n          Assemble data in the page component from your services. You can mock these services out using Storybook.\n        </li>\n      </ul>\n      <p>\n        Get a guided tutorial on component-driven development at\n        <a href=\"https://storybook.js.org/tutorials/\" target=\"_blank\" rel=\"noopener noreferrer\">\n          Storybook tutorials\n        </a>\n        . Read more in the\n        <a href=\"https://storybook.js.org/docs\" target=\"_blank\" rel=\"noopener noreferrer\"> docs </a>\n        .\n      </p>\n      <div class=\"tip-wrapper\">\n        <span class=\"tip\">Tip</span> Adjust the width of the canvas with the\n        <svg width=\"10\" height=\"10\" viewBox=\"0 0 12 12\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z\"\n              id=\"a\"\n              fill=\"#999\"\n            />\n          </g>\n        </svg>\n        Viewports addon in the toolbar\n      </div>\n    </section>\n  </article>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "user",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "User | null",
                    "optional": false,
                    "description": "",
                    "line": 62
                }
            ],
            "methodsClass": [
                {
                    "name": "doCreateAccount",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 72,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "doLogin",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 68,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "doLogout",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 64,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { User } from './User';\n\n@Component({\n  selector: 'storybook-page',\n  template: `<article>\n    <storybook-header\n      [user]=\"user\"\n      (onLogout)=\"doLogout()\"\n      (onLogin)=\"doLogin()\"\n      (onCreateAccount)=\"doCreateAccount()\"\n    ></storybook-header>\n    <section>\n      <h2>Pages in Storybook</h2>\n      <p>\n        We recommend building UIs with a\n        <a href=\"https://componentdriven.org\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <strong>component-driven</strong>\n        </a>\n        process starting with atomic components and ending with pages.\n      </p>\n      <p>\n        Render pages with mock data. This makes it easy to build and review page states without needing to navigate to\n        them in your app. Here are some handy patterns for managing page data in Storybook:\n      </p>\n      <ul>\n        <li>\n          Use a higher-level connected component. Storybook helps you compose such data from the \"args\" of child\n          component stories\n        </li>\n        <li>\n          Assemble data in the page component from your services. You can mock these services out using Storybook.\n        </li>\n      </ul>\n      <p>\n        Get a guided tutorial on component-driven development at\n        <a href=\"https://storybook.js.org/tutorials/\" target=\"_blank\" rel=\"noopener noreferrer\">\n          Storybook tutorials\n        </a>\n        . Read more in the\n        <a href=\"https://storybook.js.org/docs\" target=\"_blank\" rel=\"noopener noreferrer\"> docs </a>\n        .\n      </p>\n      <div class=\"tip-wrapper\">\n        <span class=\"tip\">Tip</span> Adjust the width of the canvas with the\n        <svg width=\"10\" height=\"10\" viewBox=\"0 0 12 12\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z\"\n              id=\"a\"\n              fill=\"#999\"\n            />\n          </g>\n        </svg>\n        Viewports addon in the toolbar\n      </div>\n    </section>\n  </article>`,\n  styleUrls: ['./page.css'],\n})\nexport default class PageComponent {\n  user: User | null = null;\n\n  doLogout() {\n    this.user = null;\n  }\n\n  doLogin() {\n    this.user = { name: 'Jane Doe 2', age: 15 };\n  }\n\n  doCreateAccount() {\n    this.user = { name: 'Jane Doe', age: 15 };\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "section {\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  font-size: 14px;\n  line-height: 24px;\n  padding: 48px 20px;\n  margin: 0 auto;\n  max-width: 600px;\n  color: #333;\n}\n\nsection h2 {\n  font-weight: 900;\n  font-size: 32px;\n  line-height: 1;\n  margin: 0 0 4px;\n  display: inline-block;\n  vertical-align: top;\n}\n\nsection p {\n  margin: 1em 0;\n}\n\nsection a {\n  text-decoration: none;\n  color: #1ea7fd;\n}\n\nsection ul {\n  padding-left: 30px;\n  margin: 1em 0;\n}\n\nsection li {\n  margin-bottom: 8px;\n}\n\nsection .tip {\n  display: inline-block;\n  border-radius: 1em;\n  font-size: 11px;\n  line-height: 12px;\n  font-weight: 700;\n  background: #e7fdd8;\n  color: #66bf3c;\n  padding: 4px 12px;\n  margin-right: 10px;\n  vertical-align: top;\n}\n\nsection .tip-wrapper {\n  font-size: 13px;\n  line-height: 20px;\n  margin-top: 40px;\n  margin-bottom: 40px;\n}\n\nsection .tip-wrapper svg {\n  display: inline-block;\n  height: 12px;\n  width: 12px;\n  margin-right: 4px;\n  vertical-align: top;\n  margin-top: 3px;\n}\n\nsection .tip-wrapper svg path {\n  fill: #1ea7fd;\n}\n",
                    "styleUrl": "./page.css"
                }
            ],
            "stylesData": ""
        },
        {
            "name": "RbacComponent",
            "id": "component-RbacComponent-36d3be955a125c3613d61f43dd1640eb8d9620806884b4b44293e8f8c01f16a5f5184fe2e4bccadac3fae830664739fe2ac106fd76c5c62987d378184518ad48",
            "file": "src/app/sessions/rxjs/lesson-six/rbac/rbac.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-rbac",
            "styleUrls": [
                "./rbac.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./rbac.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "snippet",
                    "defaultValue": "{\n    rbac: `export class Permissions {\n  isUser: Observable<boolean>;\n  isAdmin: Observable<boolean>\n\n  constructor(private auth: Authentication, private db: DbService){\n      this.isUser = auth.authState.map(state => !!state);\n      this.isAdmin = auth.authState.switchMap(state => {\n          return db.get(\\`/admins/\\${state.uid}\\`).map(data => !!data)\n      })\n  }\n}`,\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-rbac',\n  templateUrl: './rbac.component.html',\n  styleUrls: ['./rbac.component.scss'],\n})\nexport class RbacComponent implements OnInit {\n  snippet = {\n    rbac: `export class Permissions {\n  isUser: Observable<boolean>;\n  isAdmin: Observable<boolean>\n\n  constructor(private auth: Authentication, private db: DbService){\n      this.isUser = auth.authState.map(state => !!state);\n      this.isAdmin = auth.authState.switchMap(state => {\n          return db.get(\\`/admins/\\${state.uid}\\`).map(data => !!data)\n      })\n  }\n}`,\n  };\n\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./rbac.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 21
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<h1>Role Based Access Control</h1>\n<pre>\n  <code highlight>{{ snippet.rbac }}</code>\n</pre>\n"
        },
        {
            "name": "ReactiveComponent",
            "id": "component-ReactiveComponent-08c4f316ea4d7bc6f8679050319ee73adec2800aeb5cdfed098c9271ef9031f69e87d6ebb75ad72cd01f1bcbe372907561b1b6ad4458661e53e3078107093870",
            "file": "src/app/sessions/angular/lesson-one/reactive/reactive.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-reactive",
            "styleUrls": [],
            "styles": [],
            "template": "<h1>Bücherverzeichnis - Reactive</h1>\n\n<form [formGroup]=\"buchFormular\" (ngSubmit)=\"submit()\">\n  <label>Bezeichnung</label>\n  <input autocomplete=\"off\" type=\"text\" formControlName=\"bezeichnung\" required />\n  <label>ISBN</label>\n  <input autocomplete=\"off\" type=\"text\" formControlName=\"isbn\" />\n  <button type=\"submit\">Produkt hinzufügen</button>\n</form>\n\n<div *ngFor=\"let buch of buecher\">\n  {{ buch | json }}\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "buchFormular",
                    "defaultValue": "new UntypedFormGroup({\n    bezeichnung: new UntypedFormControl(),\n    isbn: new UntypedFormControl(),\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "buecher",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 28
                }
            ],
            "methodsClass": [
                {
                    "name": "submit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { UntypedFormControl, UntypedFormGroup } from '@angular/forms';\n\n@Component({\n  selector: 'app-reactive',\n  template: `\n    <h1>Bücherverzeichnis - Reactive</h1>\n\n    <form [formGroup]=\"buchFormular\" (ngSubmit)=\"submit()\">\n      <label>Bezeichnung</label>\n      <input autocomplete=\"off\" type=\"text\" formControlName=\"bezeichnung\" required />\n      <label>ISBN</label>\n      <input autocomplete=\"off\" type=\"text\" formControlName=\"isbn\" />\n      <button type=\"submit\">Produkt hinzufügen</button>\n    </form>\n\n    <div *ngFor=\"let buch of buecher\">\n      {{ buch | json }}\n    </div>\n  `,\n})\nexport class ReactiveComponent {\n  buchFormular = new UntypedFormGroup({\n    bezeichnung: new UntypedFormControl(),\n    isbn: new UntypedFormControl(),\n  });\n\n  buecher = [];\n\n  submit() {\n    if (this.buchFormular.valid) {\n      this.buecher.push(this.buchFormular.value);\n    }\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "ReactiveFormArrayComponent",
            "id": "component-ReactiveFormArrayComponent-6c2777271de9274fd99e7bd26b92b361a6ff6c9cc76ff5a6291ef591271fbe54497bc8f2739519609f84ddab43e09a855eca5ecd958f86a587621db7725e02ec",
            "file": "src/app/sessions/angular/lesson-one/reactive-form-array/reactive-form-array.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-reactive-form-array",
            "styleUrls": [],
            "styles": [],
            "template": "<h1>Bücherverzeichnis - Reactive</h1>\n\n<form [formGroup]=\"buchFormular\" (ngSubmit)=\"buecher.push(buchFormular.value)\">\n  <label>Bezeichnung</label>\n  <input autocomplete=\"off\" type=\"text\" formControlName=\"bezeichnung\" maxlength=\"\" />\n  <label>ISBN</label>\n  <input autocomplete=\"off\" type=\"text\" formControlName=\"isbn\" />\n  <div formArrayName=\"authors\">\n    <span>Autoren</span>\n    <button type=\"button\" (click)=\"addAutor()\">+ Autor hinzufügen</button>\n\n    <div *ngFor=\"let autor of autoren.controls; let i = index\">\n      <!-- The repeated alias template -->\n      <label for=\"autor-{{ i }}\">Autor:</label>\n      <input id=\"autor-{{ i }}\" type=\"text\" [formControlName]=\"i\" required />\n    </div>\n  </div>\n  <button type=\"submit\" [disabled]=\"!buchFormular\">Produkt hinzufügen</button>\n</form>\n\n<div *ngFor=\"let buch of buecher\">\n  {{ buch | json }}\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "buchFormular",
                    "defaultValue": "new UntypedFormGroup({\n    bezeichnung: new UntypedFormControl(),\n    isbn: new UntypedFormControl(),\n    authors: new UntypedFormArray([]),\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 33
                },
                {
                    "name": "buecher",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 47
                }
            ],
            "methodsClass": [
                {
                    "name": "addAutor",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 43,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { UntypedFormArray, UntypedFormControl, UntypedFormGroup } from '@angular/forms';\n\n@Component({\n  selector: 'app-reactive-form-array',\n  template: `\n    <h1>Bücherverzeichnis - Reactive</h1>\n\n    <form [formGroup]=\"buchFormular\" (ngSubmit)=\"buecher.push(buchFormular.value)\">\n      <label>Bezeichnung</label>\n      <input autocomplete=\"off\" type=\"text\" formControlName=\"bezeichnung\" maxlength=\"\" />\n      <label>ISBN</label>\n      <input autocomplete=\"off\" type=\"text\" formControlName=\"isbn\" />\n      <div formArrayName=\"authors\">\n        <span>Autoren</span>\n        <button type=\"button\" (click)=\"addAutor()\">+ Autor hinzufügen</button>\n\n        <div *ngFor=\"let autor of autoren.controls; let i = index\">\n          <!-- The repeated alias template -->\n          <label for=\"autor-{{ i }}\">Autor:</label>\n          <input id=\"autor-{{ i }}\" type=\"text\" [formControlName]=\"i\" required />\n        </div>\n      </div>\n      <button type=\"submit\" [disabled]=\"!buchFormular\">Produkt hinzufügen</button>\n    </form>\n\n    <div *ngFor=\"let buch of buecher\">\n      {{ buch | json }}\n    </div>\n  `,\n})\nexport class ReactiveFormArrayComponent {\n  buchFormular = new UntypedFormGroup({\n    bezeichnung: new UntypedFormControl(),\n    isbn: new UntypedFormControl(),\n    authors: new UntypedFormArray([]),\n  });\n\n  get autoren() {\n    return this.buchFormular.get('authors') as UntypedFormArray;\n  }\n\n  addAutor() {\n    this.autoren.push(new UntypedFormControl());\n  }\n\n  buecher = [];\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "accessors": {
                "autoren": {
                    "name": "autoren",
                    "getSignature": {
                        "name": "autoren",
                        "type": "",
                        "returnType": "",
                        "line": 39
                    }
                }
            }
        },
        {
            "name": "RoutingComponent",
            "id": "component-RoutingComponent-b47f120beeb57298ed9381863abe7a1c22ed0413c3170a1fc8bb091572c4a2b4e102238978c592e897e240723b4c3a288f89a250c0f79fddbdb98e2c1f1a80b4",
            "file": "src/app/sessions/rxjs/lesson-six/routing/routing.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-routing",
            "styleUrls": [
                "./routing.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./routing.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "snippet",
                    "defaultValue": "{\n    routing: `constructor(private route: ActivatedRoute) { }\n\nvalues$ = this.route.paramMap.pipe(\n  distinctUntilChanged(),\n  switchMap(map => service.getDate(map.get('id')))\n)`,\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "optional": false,
                    "description": "",
                    "line": 11
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { distinctUntilChanged, switchMap } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-routing',\n  templateUrl: './routing.component.html',\n  styleUrls: ['./routing.component.scss'],\n})\nexport class RoutingComponent implements OnInit {\n  snippet = {\n    routing: `constructor(private route: ActivatedRoute) { }\n\nvalues$ = this.route.paramMap.pipe(\n  distinctUntilChanged(),\n  switchMap(map => service.getDate(map.get('id')))\n)`,\n  };\n\n  constructor(private route: ActivatedRoute) {}\n\n  ngOnInit(): void {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./routing.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 18,
                "jsdoctags": [
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<h1>Routing</h1>\n<pre>\n  <code highlight>{{ snippet.routing }}</code>\n</pre>\n"
        },
        {
            "name": "RxjsComponent",
            "id": "component-RxjsComponent-d5d6979bbff53bf03a71643474ec7cfde74bbfe50aaa0a5ed5a312086efae1b14431aa36b02ccaf60dd436f9f9bf81df4e227eb5b2af0ec2e18150fefd3403b4",
            "file": "src/app/sessions/rxjs/rxjs.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-rxjs",
            "styleUrls": [
                "./rxjs.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./rxjs.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 11,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-rxjs',\n  templateUrl: './rxjs.component.html',\n  styleUrls: ['./rxjs.component.scss'],\n})\nexport class RxjsComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./rxjs.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<router-outlet></router-outlet>\n"
        },
        {
            "name": "RxLinkComponent",
            "id": "component-RxLinkComponent-54ae073ac06b1732b2dc00b6bb4e46feb800cec9df053a67d0c4426f62da66ea4efe9b61e880c880c3f0779bff9b35ccbd628ab25a51d11ed53357c970da019b",
            "file": "src/app/sessions/rxjs/lesson-six/operators-overview/rx-link/rx-link.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-rx-link",
            "styleUrls": [
                "./rx-link.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./rx-link.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "any",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 14,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-rx-link',\n  templateUrl: './rx-link.component.html',\n  styleUrls: ['./rx-link.component.scss'],\n})\nexport class RxLinkComponent implements OnInit {\n  @Input() name;\n  @Input() type;\n\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./rx-link.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 10
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "{{ name }} <a [href]=\"'https://rxjs.dev/api/index/function/' + name\">rxjs.dev</a>&nbsp;<a\n  [href]=\"'https://www.learnrxjs.io/learn-rxjs/operators/' + type.toLowerCase() + '/' + name.toLowerCase()\"\n  >learnrxjs</a\n>\n"
        },
        {
            "name": "SaveIndicatorComponent",
            "id": "component-SaveIndicatorComponent-e2e0e85eddb026f2716b23df2588f945feb107b7dcbe6ae9c08a8370d3862769d18f051d603fe34d6ca7ca19bb0eb7401cd4dbb1ca49da8eab9edb0d3040737f",
            "file": "src/app/sessions/rxjs/lesson-six/save-indicator/save-indicator.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-save-indicator",
            "styleUrls": [
                "./save-indicator.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./save-indicator.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "input",
                    "defaultValue": "new UntypedFormControl('')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 78
                },
                {
                    "name": "inputToSave$",
                    "defaultValue": "this.input.valueChanges.pipe(debounceTime(200), distinctUntilChanged(), share())",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Trigger a save when the user stops typing for 200ms\nAfter new data has been successfully saved, so a saved\nand last updated indicator.</p>\n",
                    "line": 91,
                    "rawdescription": "\n\nTrigger a save when the user stops typing for 200ms\nAfter new data has been successfully saved, so a saved\nand last updated indicator.\n"
                },
                {
                    "name": "saveChanges",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 82
                },
                {
                    "name": "savesCompleted$",
                    "defaultValue": "this.inputToSave$.pipe(\n    mergeMap(this.saveChanges),\n    tap((_) => this.savesInProgress--),\n    // ignore if additional saves are in progress\n    filter((_) => !this.savesInProgress),\n    mapTo(\n      concat(\n        // display saved for 2s\n        of('Saved!'),\n        EMPTY.pipe(delay(2000)),\n        // then last updated time, defer for proper time\n        defer(() => of('Last updated: ' + formatDate(Date.now(), 'MM/dd/YYYY hh:mm', 'en-US') + '}'))\n      )\n    )\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 98
                },
                {
                    "name": "savesInProgress",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 79
                },
                {
                    "name": "savesInProgress$",
                    "defaultValue": "this.inputToSave$.pipe(\n    mapTo(of('Saving')),\n    tap((_) => this.savesInProgress++)\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 93
                },
                {
                    "name": "saveStatus$",
                    "defaultValue": "merge(this.savesInProgress$, this.savesCompleted$).pipe(\n    //If new save comes in when our completion observable is running, we want to switch to it for a status update.\n    switchAll()\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 114
                },
                {
                    "name": "snippet",
                    "defaultValue": "{\n    saveIndicatorHtml: `<input style=\"width: 100%\" [formControl]=\"input\" type=\"text\">\n<span>{{saveStatus$ | async}}</span>`,\n    saveIndicator: `input = new FormControl('');\nsavesInProgress = 0;\n\n// fake save request\nsaveChanges = value => {\n  return of(value).pipe(delay(1500));\n};\n\n/**\n * Trigger a save when the user stops typing for 200ms\n * After new data has been successfully saved, so a saved\n * and last updated indicator.\n */\ninputToSave$ = this.input.valueChanges.pipe(\n  debounceTime(200),\n  distinctUntilChanged(),\n  share()\n);\n\nsavesInProgress$ = this.inputToSave$.pipe(\n  mapTo(of('Saving')),\n  tap(_ => this.savesInProgress++)\n);\n\nsavesCompleted$ = this.inputToSave$.pipe(\n  mergeMap(this.saveChanges),\n  tap(_ => this.savesInProgress--),\n  // ignore if additional saves are in progress\n  filter(_ => !this.savesInProgress),\n  mapTo(\n    concat(\n      // display saved for 2s\n      of('Saved!'),\n      EMPTY.pipe(delay(2000)),\n      // then last updated time, defer for proper time\n      defer(() => of('Last updated: ' + formatDate(Date.now(), 'MM/dd/YYYY hh:mm', 'en-US') + '}'))\n    )\n  )\n);\n\nsaveStatus$ = merge(this.savesInProgress$, this.savesCompleted$)\n  .pipe(\n    //If new save comes in when our completion observable is running, we want to switch to it for a status update.\n    switchAll()\n  )`,\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "optional": false,
                    "description": "",
                    "line": 24
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 76,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { formatDate } from '@angular/common';\nimport { fromEvent, of, merge, empty, concat, defer, EMPTY } from 'rxjs';\nimport {\n  delay,\n  map,\n  mergeMap,\n  tap,\n  debounceTime,\n  distinctUntilChanged,\n  mapTo,\n  filter,\n  share,\n  switchAll,\n} from 'rxjs/operators';\nimport { UntypedFormControl } from '@angular/forms';\n\n@Component({\n  selector: 'app-save-indicator',\n  templateUrl: './save-indicator.component.html',\n  styleUrls: ['./save-indicator.component.scss'],\n})\nexport class SaveIndicatorComponent implements OnInit {\n  snippet = {\n    saveIndicatorHtml: `<input style=\"width: 100%\" [formControl]=\"input\" type=\"text\">\n<span>{{saveStatus$ | async}}</span>`,\n    saveIndicator: `input = new FormControl('');\nsavesInProgress = 0;\n\n// fake save request\nsaveChanges = value => {\n  return of(value).pipe(delay(1500));\n};\n\n/**\n * Trigger a save when the user stops typing for 200ms\n * After new data has been successfully saved, so a saved\n * and last updated indicator.\n */\ninputToSave$ = this.input.valueChanges.pipe(\n  debounceTime(200),\n  distinctUntilChanged(),\n  share()\n);\n\nsavesInProgress$ = this.inputToSave$.pipe(\n  mapTo(of('Saving')),\n  tap(_ => this.savesInProgress++)\n);\n\nsavesCompleted$ = this.inputToSave$.pipe(\n  mergeMap(this.saveChanges),\n  tap(_ => this.savesInProgress--),\n  // ignore if additional saves are in progress\n  filter(_ => !this.savesInProgress),\n  mapTo(\n    concat(\n      // display saved for 2s\n      of('Saved!'),\n      EMPTY.pipe(delay(2000)),\n      // then last updated time, defer for proper time\n      defer(() => of('Last updated: ' + formatDate(Date.now(), 'MM/dd/YYYY hh:mm', 'en-US') + '}'))\n    )\n  )\n);\n\nsaveStatus$ = merge(this.savesInProgress$, this.savesCompleted$)\n  .pipe(\n    //If new save comes in when our completion observable is running, we want to switch to it for a status update.\n    switchAll()\n  )`,\n  };\n\n  constructor() {}\n\n  ngOnInit(): void {}\n\n  input = new UntypedFormControl('');\n  savesInProgress = 0;\n\n  // fake save request\n  saveChanges = (value) => {\n    return of(value).pipe(delay(1500));\n  };\n\n  /**\n   * Trigger a save when the user stops typing for 200ms\n   * After new data has been successfully saved, so a saved\n   * and last updated indicator.\n   */\n  inputToSave$ = this.input.valueChanges.pipe(debounceTime(200), distinctUntilChanged(), share());\n\n  savesInProgress$ = this.inputToSave$.pipe(\n    mapTo(of('Saving')),\n    tap((_) => this.savesInProgress++)\n  );\n\n  savesCompleted$ = this.inputToSave$.pipe(\n    mergeMap(this.saveChanges),\n    tap((_) => this.savesInProgress--),\n    // ignore if additional saves are in progress\n    filter((_) => !this.savesInProgress),\n    mapTo(\n      concat(\n        // display saved for 2s\n        of('Saved!'),\n        EMPTY.pipe(delay(2000)),\n        // then last updated time, defer for proper time\n        defer(() => of('Last updated: ' + formatDate(Date.now(), 'MM/dd/YYYY hh:mm', 'en-US') + '}'))\n      )\n    )\n  );\n\n  saveStatus$ = merge(this.savesInProgress$, this.savesCompleted$).pipe(\n    //If new save comes in when our completion observable is running, we want to switch to it for a status update.\n    switchAll()\n  );\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./save-indicator.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 72
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<h1>Save Indicator</h1>\n\n<div style=\"display: flex; flex-direction: column; max-width: 300px; align-items: flex-end\">\n  <input style=\"width: 100%\" [formControl]=\"input\" type=\"text\" />\n  <span>{{ saveStatus$ | async }}</span>\n</div>\n<pre>\n  <code highlight>{{ snippet.saveIndicatorHtml }}</code>\n</pre>\n<pre>\n  <code highlight>{{ snippet.saveIndicator }}</code>\n</pre>\n"
        },
        {
            "name": "SequentialAnimationComponent",
            "id": "component-SequentialAnimationComponent-2365480ebde70188bba8e8ddb42e3ef468ed39450b5314347f9294629f55276b806677a84298e999b22cb5760c6a948e024cb72e02a2887e51c95c11d98fd465",
            "file": "src/app/sessions/angular/lesson-four/sequential-animation/sequential-animation.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-sequential-animation",
            "styleUrls": [
                "./sequential-animation.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./sequential-animation.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "listItems",
                    "defaultValue": "['First Item', 'Second Item', 'Third Item', 'Fourth Item']",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 47,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "addCard",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 49,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "deleteAllCards",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 57,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onCardClick",
                    "args": [
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 53,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { trigger, style, animate, transition, query, keyframes, stagger } from '@angular/animations';\n\n@Component({\n  selector: 'app-sequential-animation',\n  templateUrl: './sequential-animation.component.html',\n  styleUrls: ['./sequential-animation.component.scss'],\n  animations: [\n    trigger('listAnimation', [\n      transition('* => *', [\n        query(':enter', style({ opacity: 0 }), { optional: true }),\n\n        query(\n          ':enter',\n          stagger('250ms', [\n            animate(\n              '0.5s ease-in',\n              keyframes([\n                style({ opacity: 0, transform: 'translateY(75px)', offset: 0 }),\n                style({ opacity: 0.5, transform: 'translateY(-35px)', offset: 0.3 }),\n                style({ opacity: 1, transform: 'translateY(0)', offset: 1.0 }),\n              ])\n            ),\n          ]),\n          { optional: true }\n        ),\n\n        query(\n          ':leave',\n          stagger('250ms', [\n            animate(\n              '0.35s ease-in',\n              keyframes([\n                style({ opacity: 1, transform: 'translateY(0)', offset: 0 }),\n                style({ opacity: 0.5, transform: 'translateY(35px)', offset: 0.3 }),\n                style({ opacity: 0, transform: 'translateY(-75px)', offset: 1.0 }),\n              ])\n            ),\n          ]),\n          { optional: true }\n        ),\n      ]),\n    ]),\n  ],\n})\nexport class SequentialAnimationComponent {\n  public listItems = ['First Item', 'Second Item', 'Third Item', 'Fourth Item'];\n\n  addCard() {\n    this.listItems.push('One More Card ' + Math.random());\n  }\n\n  onCardClick(index: number) {\n    this.listItems.splice(index, 1);\n  }\n\n  deleteAllCards() {\n    this.listItems = [];\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".card-container {\n  display: flex;\n  flex-wrap: wrap;\n  gap: 1rem;\n  width: 100%;\n\n  .card {\n    height: 254px;\n    width: 254px;\n    background-color: whitesmoke;\n    border: 1px solid black;\n    border-radius: 4px;\n  }\n}\n",
                    "styleUrl": "./sequential-animation.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<h2>Sequentielle Animation</h2>\n\n<button (click)=\"addCard()\">Add Card!</button>\n<br />\n<button (click)=\"deleteAllCards()\">DELETE ALL!</button>\n<br />\n<br />\n<div class=\"card-container\" [@listAnimation]=\"listItems.length\">\n  <div *ngFor=\"let item of listItems; let i = index\" class=\"card\" (click)=\"onCardClick(i)\">{{ item }}</div>\n</div>\n"
        },
        {
            "name": "SimpleAnimationComponent",
            "id": "component-SimpleAnimationComponent-fe0f5a41b84d9b6bf0c7f11af523111145376e250b0e8002f7127f6872e5f7a044cb991023db3827778df019aa6f762f5bdc513dfd4112ed8398ec8b057dd11c",
            "file": "src/app/sessions/angular/lesson-four/simple-animation/simple-animation.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-simple-animation",
            "styleUrls": [
                "./simple-animation.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./simple-animation.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "isLeft",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 28,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "animateCube",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { trigger, state, style, animate, transition } from '@angular/animations';\n\n@Component({\n  selector: 'app-simple-animation',\n  templateUrl: './simple-animation.component.html',\n  styleUrls: ['./simple-animation.component.scss'],\n  animations: [\n    trigger('leftRight', [\n      state(\n        'left',\n        style({\n          transform: 'translateX(0)',\n        })\n      ),\n      state(\n        'right',\n        style({\n          transform: 'translateX(600px)',\n        })\n      ),\n      transition('left => right', [animate('1s')]),\n      transition('right => left', [animate('0.5s')]),\n    ]),\n  ],\n})\nexport class SimpleAnimationComponent {\n  public isLeft = true;\n\n  animateCube() {\n    this.isLeft = !this.isLeft;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".cube {\n  height: 254px;\n  width: 254px;\n  background-color: aquamarine;\n}\n",
                    "styleUrl": "./simple-animation.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<h2>Simple Animation</h2>\n\n<div [@leftRight]=\"isLeft ? 'left' : 'right'\" class=\"cube\"></div>\n<br />\n<button (click)=\"animateCube()\">Animate it!</button>\n"
        },
        {
            "name": "TemplateDrivenComponent",
            "id": "component-TemplateDrivenComponent-5a234ad9aba135c33e3f89d4a94651b8462e556cb3ec501f110cb3f8e067c0e49cc49b3501d02ceba216d96808625ac67bc483f975cb492b4dae98a264491386",
            "file": "src/app/sessions/angular/lesson-one/template-driven/template-driven.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-template-driven",
            "styleUrls": [],
            "styles": [],
            "template": "<h1>Bücherverzeichnis - Template Driven</h1>\n\n<form #buchFormular=\"ngForm\" (ngSubmit)=\"buecher.push(buchFormular.value)\">\n  <label>Bezeichnung</label>\n  <input autocomplete=\"off\" type=\"text\" name=\"bezeichnung\" ngModel required />\n  <label>ISBN</label>\n  <input autocomplete=\"off\" type=\"text\" name=\"isbn\" ngModel />\n  <button type=\"submit\" [disabled]=\"!buchFormular.valid\">Produkt hinzufügen</button>\n</form>\n\n<div *ngFor=\"let buch of buecher\">\n  {{ buch | json }}\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "buecher",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 22
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-template-driven',\n  template: `\n    <h1>Bücherverzeichnis - Template Driven</h1>\n\n    <form #buchFormular=\"ngForm\" (ngSubmit)=\"buecher.push(buchFormular.value)\">\n      <label>Bezeichnung</label>\n      <input autocomplete=\"off\" type=\"text\" name=\"bezeichnung\" ngModel required />\n      <label>ISBN</label>\n      <input autocomplete=\"off\" type=\"text\" name=\"isbn\" ngModel />\n      <button type=\"submit\" [disabled]=\"!buchFormular.valid\">Produkt hinzufügen</button>\n    </form>\n\n    <div *ngFor=\"let buch of buecher\">\n      {{ buch | json }}\n    </div>\n  `,\n})\nexport class TemplateDrivenComponent {\n  buecher = [];\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "TemplateDrivenFormArrayLikeComponent",
            "id": "component-TemplateDrivenFormArrayLikeComponent-051e5bfe43e9212d670a7515b70acf4cc0574bb6c9f8db3c309bc9db6b069b8bfe6d362929e7502dd9382eb930b428de5301bfd6807850d5c693ee54997414bc",
            "file": "src/app/sessions/angular/lesson-one/template-driven-form-array-like/template-driven-form-array-like.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-template-driven-form-array-like",
            "styleUrls": [],
            "styles": [],
            "template": "<h1>Bücherverzeichnis - Template Driven</h1>\n\n<form #buchFormular=\"ngForm\" (ngSubmit)=\"buecher.push(buchFormular.value)\">\n  <label>Bezeichnung</label>\n  <input autocomplete=\"off\" type=\"text\" name=\"bezeichnung\" ngModel />\n  <label>ISBN</label>\n  <input autocomplete=\"off\" type=\"text\" name=\"isbn\" ngModel />\n  <div>\n    <span>Autoren</span>\n    <button type=\"button\" (click)=\"addAutor()\">+ Autor hinzufügen</button>\n\n    <div *ngFor=\"let autor of autoren; let i = index\">\n      <!-- The repeated alias template -->\n      <label for=\"autor-{{ i }}\">Autor:</label>\n      <input id=\"autor-{{ i }}\" name=\"author-{{ i }}\" type=\"text\" ngModel required />\n    </div>\n  </div>\n  <button type=\"submit\" [disabled]=\"!buchFormular.valid\">Produkt hinzufügen</button>\n</form>\n\n<div *ngFor=\"let buch of buecher\">\n  {{ buch | json }}\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "autoren",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 32
                },
                {
                    "name": "buecher",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 39
                }
            ],
            "methodsClass": [
                {
                    "name": "addAutor",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-template-driven-form-array-like',\n  template: `\n    <h1>Bücherverzeichnis - Template Driven</h1>\n\n    <form #buchFormular=\"ngForm\" (ngSubmit)=\"buecher.push(buchFormular.value)\">\n      <label>Bezeichnung</label>\n      <input autocomplete=\"off\" type=\"text\" name=\"bezeichnung\" ngModel />\n      <label>ISBN</label>\n      <input autocomplete=\"off\" type=\"text\" name=\"isbn\" ngModel />\n      <div>\n        <span>Autoren</span>\n        <button type=\"button\" (click)=\"addAutor()\">+ Autor hinzufügen</button>\n\n        <div *ngFor=\"let autor of autoren; let i = index\">\n          <!-- The repeated alias template -->\n          <label for=\"autor-{{ i }}\">Autor:</label>\n          <input id=\"autor-{{ i }}\" name=\"author-{{ i }}\" type=\"text\" ngModel required />\n        </div>\n      </div>\n      <button type=\"submit\" [disabled]=\"!buchFormular.valid\">Produkt hinzufügen</button>\n    </form>\n\n    <div *ngFor=\"let buch of buecher\">\n      {{ buch | json }}\n    </div>\n  `,\n})\nexport class TemplateDrivenFormArrayLikeComponent {\n  autoren = [];\n\n  addAutor() {\n    let index = this.autoren.slice(-1)[0];\n    this.autoren.push(index + 1);\n  }\n\n  buecher = [];\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "UserInputComponent",
            "id": "component-UserInputComponent-85a28def085926d6dfe6c7ffbc6b8e5dbb7519d68cc859d32b704611e01c84054134299f8a6689df4aabb05ffa43d8947061d19d11ab1871df36a3ffe961585f",
            "file": "src/app/sessions/rxjs/lesson-six/user-input/user-input.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-user-input",
            "styleUrls": [
                "./user-input.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./user-input.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "loading",
                    "defaultValue": "{ loading: true, results: [], error: '' }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "optional": false,
                    "description": "",
                    "line": 42
                },
                {
                    "name": "searchInput",
                    "defaultValue": "new UntypedFormControl('')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 45
                },
                {
                    "name": "searchResult$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<literal type>",
                    "optional": false,
                    "description": "",
                    "line": 44
                },
                {
                    "name": "snippet",
                    "defaultValue": "{\n    userInputHtml: `<input [formControl]=\"searchInput\">\n<ng-container *ngIf=\"(searchResult$ | async) as resultWrapper\">\n  <span *ngIf=\"resultWrapper.loading\">Loading...</span>\n  <span *ngIf=\"resultWrapper.error\" style=\"color: red\">{{resultWrapper.error}}</span>\n  <div *ngFor=\"let result of resultWrapper.results\">{{result}}</div>\n</ng-container>`,\n    userInput: `searchResult$: Observable<{loading: boolean, results:string[], error:string}>;\nsearchInput = new FormControl('');\n\nngOnInit(): void {\n  this.searchResult$ = this.searchInput.valueChanges.pipe(\n    filter(Boolean),\n    map(search => search.trim()),\n    debounceTime(200),\n    distinctUntilChanged(),\n    filter(search => search !== ''),\n    switchMap(search => this.searchService.search(search).pipe(\n      retry(3),\n      map(this.wrapResult()),\n      startWith(this.loading),\n      catchError(this.wrapError())\n    )),\n  )\n}`,\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 47,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "wrapError",
                    "args": [],
                    "optional": false,
                    "returnType": "(error: any) => any",
                    "typeParameters": [],
                    "line": 72,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "wrapResult",
                    "args": [],
                    "optional": false,
                    "returnType": "(result: any) => { loading: boolean; results: any; error: string; }",
                    "typeParameters": [],
                    "line": 62,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { UntypedFormControl } from '@angular/forms';\nimport { catchError, Observable, of, retry, startWith } from 'rxjs';\nimport { debounceTime, distinctUntilChanged, filter, map, switchMap } from 'rxjs/operators';\nimport { SearchService } from './search.service';\n\n@Component({\n  selector: 'app-user-input',\n  templateUrl: './user-input.component.html',\n  styleUrls: ['./user-input.component.scss'],\n})\nexport class UserInputComponent implements OnInit {\n  snippet = {\n    userInputHtml: `<input [formControl]=\"searchInput\">\n<ng-container *ngIf=\"(searchResult$ | async) as resultWrapper\">\n  <span *ngIf=\"resultWrapper.loading\">Loading...</span>\n  <span *ngIf=\"resultWrapper.error\" style=\"color: red\">{{resultWrapper.error}}</span>\n  <div *ngFor=\"let result of resultWrapper.results\">{{result}}</div>\n</ng-container>`,\n    userInput: `searchResult$: Observable<{loading: boolean, results:string[], error:string}>;\nsearchInput = new FormControl('');\n\nngOnInit(): void {\n  this.searchResult$ = this.searchInput.valueChanges.pipe(\n    filter(Boolean),\n    map(search => search.trim()),\n    debounceTime(200),\n    distinctUntilChanged(),\n    filter(search => search !== ''),\n    switchMap(search => this.searchService.search(search).pipe(\n      retry(3),\n      map(this.wrapResult()),\n      startWith(this.loading),\n      catchError(this.wrapError())\n    )),\n  )\n}`,\n  };\n\n  constructor(private searchService: SearchService) {}\n\n  loading = { loading: true, results: [], error: '' };\n\n  searchResult$: Observable<{ loading: boolean; results: string[]; error: string }>;\n  searchInput = new UntypedFormControl('');\n\n  ngOnInit(): void {\n    this.searchResult$ = this.searchInput.valueChanges.pipe(\n      filter(Boolean),\n      map((search) => search.trim()),\n      debounceTime(200),\n      distinctUntilChanged(),\n      filter((search) => search !== ''),\n      switchMap((search) =>\n        this.searchService\n          .search(search)\n          .pipe(retry(3), map(this.wrapResult()), startWith(this.loading), catchError(this.wrapError()))\n      )\n    );\n  }\n\n  private wrapResult() {\n    return (result) => {\n      return {\n        loading: false,\n        results: result,\n        error: '',\n      };\n    };\n  }\n\n  private wrapError() {\n    return (error) => {\n      return of({\n        loading: false,\n        results: [],\n        error: error,\n      });\n    };\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./user-input.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "searchService",
                        "type": "SearchService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 38,
                "jsdoctags": [
                    {
                        "name": "searchService",
                        "type": "SearchService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<h1>Better User Input handling</h1>\n\n<input [formControl]=\"searchInput\" />\n<ng-container *ngIf=\"searchResult$ | async as resultWrapper\">\n  <span *ngIf=\"resultWrapper.loading\">Loading...</span>\n  <span *ngIf=\"resultWrapper.error\" style=\"color: red\">{{ resultWrapper.error }}</span>\n  <div *ngFor=\"let result of resultWrapper.results\">{{ result }}</div>\n</ng-container>\n\n<pre>\n  <code highlight>{{ snippet.userInputHtml }}</code>\n</pre>\n<pre>\n  <code highlight>{{ snippet.userInput }}</code>\n</pre>\n"
        }
    ],
    "modules": [
        {
            "name": "AngularModule",
            "id": "module-AngularModule-7d3e6d9828d000a8fc4de7e6ab358602a0ee23f1c75d96a037855a7b3e2cd9d20b0cc0cc7234c6df292b927e04722f91c5b11c28cbfde180ad5839dc79de49f7",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/sessions/angular/angular.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { AngularRoutingModule } from './angular-routing.module';\nimport { AngularComponent } from './angular.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MaterialModule } from '../../angular-material/material.module';\nimport { LessonFourComponent } from './lesson-four/lesson-four.component';\nimport { SimpleAnimationComponent } from './lesson-four/simple-animation/simple-animation.component';\nimport { MultiStepAnimationComponent } from './lesson-four/multi-step-animation/multi-step-animation.component';\nimport { SequentialAnimationComponent } from './lesson-four/sequential-animation/sequential-animation.component';\nimport { LessonFiveComponent } from './lesson-five/lesson-five.component';\nimport { AmTypographyComponent } from './lesson-five/am-typography/am-typography.component';\nimport { AmComponentsComponent } from './lesson-five/am-components/am-components.component';\nimport { AmOverviewComponent } from './lesson-five/am-overview/am-overview.component';\nimport { TemplateDrivenComponent } from './lesson-one/template-driven/template-driven.component';\nimport { ReactiveComponent } from './lesson-one/reactive/reactive.component';\nimport { ReactiveFormArrayComponent } from './lesson-one/reactive-form-array/reactive-form-array.component';\nimport { TemplateDrivenFormArrayLikeComponent } from './lesson-one/template-driven-form-array-like/template-driven-form-array-like.component';\nimport { LessonOneComponent } from './lesson-one/lesson-one.component';\nimport { LessonThreeComponent } from '../rxjs/lesson-three/lesson-three.component';\n\n@NgModule({\n  declarations: [\n    AngularComponent,\n    LessonOneComponent,\n    TemplateDrivenComponent,\n    ReactiveComponent,\n    ReactiveFormArrayComponent,\n    TemplateDrivenFormArrayLikeComponent,\n    LessonFourComponent,\n    SimpleAnimationComponent,\n    MultiStepAnimationComponent,\n    SequentialAnimationComponent,\n    LessonFiveComponent,\n    AmTypographyComponent,\n    AmComponentsComponent,\n    AmOverviewComponent,\n  ],\n  imports: [CommonModule, FormsModule, ReactiveFormsModule, MaterialModule, AngularRoutingModule],\n})\nexport class AngularModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AmComponentsComponent"
                        },
                        {
                            "name": "AmOverviewComponent"
                        },
                        {
                            "name": "AmTypographyComponent"
                        },
                        {
                            "name": "AngularComponent"
                        },
                        {
                            "name": "LessonFiveComponent"
                        },
                        {
                            "name": "LessonFourComponent"
                        },
                        {
                            "name": "LessonOneComponent"
                        },
                        {
                            "name": "MultiStepAnimationComponent"
                        },
                        {
                            "name": "ReactiveComponent"
                        },
                        {
                            "name": "ReactiveFormArrayComponent"
                        },
                        {
                            "name": "SequentialAnimationComponent"
                        },
                        {
                            "name": "SimpleAnimationComponent"
                        },
                        {
                            "name": "TemplateDrivenComponent"
                        },
                        {
                            "name": "TemplateDrivenFormArrayLikeComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AngularRoutingModule"
                        },
                        {
                            "name": "MaterialModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AngularRoutingModule",
            "id": "module-AngularRoutingModule-57ab68baf5dde389a79f7bda7fd55ea350788bd3f8683f16bf130eeb45e5ba4be17dca09a4430dc3ab66bb5c3d5d57f6703d60df25030df152bbf68fb8a681b9",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/sessions/angular/angular-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AngularComponent } from './angular.component';\nimport { LessonOneComponent } from './lesson-one/lesson-one.component';\nimport { LessonFourComponent } from './lesson-four/lesson-four.component';\nimport { LessonFiveComponent } from './lesson-five/lesson-five.component';\nimport { AmOverviewComponent } from './lesson-five/am-overview/am-overview.component';\nimport { AmTypographyComponent } from './lesson-five/am-typography/am-typography.component';\nimport { AmComponentsComponent } from './lesson-five/am-components/am-components.component';\n\nconst routes: Routes = [\n  { path: '', component: AngularComponent },\n  {\n    path: 'forms',\n    component: LessonOneComponent,\n  },\n  {\n    path: 'animations',\n    component: LessonFourComponent,\n  },\n  {\n    path: 'material',\n    component: LessonFiveComponent,\n    children: [\n      {\n        path: 'am-overview',\n        component: AmOverviewComponent,\n      },\n      {\n        path: 'am-typography',\n        component: AmTypographyComponent,\n      },\n      {\n        path: 'am-components',\n        component: AmComponentsComponent,\n      },\n      {\n        path: '**',\n        component: AmOverviewComponent,\n      },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class AngularRoutingModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppModule",
            "id": "module-AppModule-5df79bf1129721bd9419bd0c5282f3e6506a75952ca7f6f60a98087e11115650537ec602f7387def55f084042f6b7fd2700afb3d86ecfc08e1626ad18145eb12",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { LessonTwoComponent } from './lesson-two/lesson-two.component';\nimport { HomeComponent } from './home/home.component';\nimport { CssLayoutExampleFlexComponent } from './lesson-two/css-layout-example-flex/css-layout-example-flex.component';\nimport { CssLayoutExampleGridComponent } from './lesson-two/css-layout-example-grid/css-layout-example-grid.component';\nimport { SharedModule } from './shared/shared.module';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HttpClientModule } from '@angular/common/http';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LessonTwoComponent,\n    HomeComponent,\n    CssLayoutExampleFlexComponent,\n    CssLayoutExampleGridComponent,\n  ],\n  imports: [BrowserModule, BrowserAnimationsModule, AppRoutingModule, SharedModule, HttpClientModule],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AppComponent"
                        },
                        {
                            "name": "CssLayoutExampleFlexComponent"
                        },
                        {
                            "name": "CssLayoutExampleGridComponent"
                        },
                        {
                            "name": "HomeComponent"
                        },
                        {
                            "name": "LessonTwoComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AppRoutingModule"
                        },
                        {
                            "name": "SharedModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppRoutingModule",
            "id": "module-AppRoutingModule-f1fad1ba02a78ec9341d69fdadbf827d8885070356491f5680daaee9c651c4a2e5be31be24afad7ded4e1daa7be8381dbb1432139000078391b34b39cdd9a411",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { HomeComponent } from './home/home.component';\nimport { LessonFourComponent } from './sessions/angular/lesson-four/lesson-four.component';\nimport { LessonOneComponent } from './sessions/angular/lesson-one/lesson-one.component';\nimport { LessonThreeComponent } from './sessions/rxjs/lesson-three/lesson-three.component';\nimport { LessonTwoComponent } from './lesson-two/lesson-two.component';\nimport { LessonFiveComponent } from './sessions/angular/lesson-five/lesson-five.component';\nimport { AmTypographyComponent } from './sessions/angular/lesson-five/am-typography/am-typography.component';\nimport { AmComponentsComponent } from './sessions/angular/lesson-five/am-components/am-components.component';\nimport { AmOverviewComponent } from './sessions/angular/lesson-five/am-overview/am-overview.component';\nimport { OperatorsOverviewComponent } from './sessions/rxjs/lesson-six/operators-overview/operators-overview.component';\nimport { LessonSixComponent } from './sessions/rxjs/lesson-six/lesson-six.component';\nimport { RoutingComponent } from './sessions/rxjs/lesson-six/routing/routing.component';\nimport { UserInputComponent } from './sessions/rxjs/lesson-six/user-input/user-input.component';\nimport { RbacComponent } from './sessions/rxjs/lesson-six/rbac/rbac.component';\nimport { SaveIndicatorComponent } from './sessions/rxjs/lesson-six/save-indicator/save-indicator.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: HomeComponent,\n  },\n  {\n    path: 'session/css/grid-and-flexbox',\n    component: LessonTwoComponent,\n  },\n  { path: 'session/rxjs', loadChildren: () => \"import('./sessions/rxjs/rxjs.module').then((m) => m.RxjsModule)\" },\n  {\n    path: 'session/angular',\n    loadChildren: () => \"import('./sessions/angular/angular.module').then((m) => m.AngularModule)\",\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "MaterialModule",
            "id": "module-MaterialModule-40f33541f3fb2c2c95f4088fc7301ac1c93e442b0e7e35413a8bd6c245727c4ad58fa11aaf121c77f927dd2241184bc1388f512e63ffc7982f180b4188152d46",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/angular-material/material.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport {MatToolbarModule} from \"@angular/material/toolbar\";\nimport {MatCardModule} from \"@angular/material/card\";\nimport {MatButtonModule} from \"@angular/material/button\";\nimport {MatChipsModule} from \"@angular/material/chips\";\nimport {MatMenuModule} from \"@angular/material/menu\";\nimport {MatDividerModule} from \"@angular/material/divider\";\nimport {MatIconModule} from \"@angular/material/icon\";\nimport {MatInputModule} from \"@angular/material/input\";\nimport {MatListModule} from \"@angular/material/list\";\nimport {MatFormFieldModule} from \"@angular/material/form-field\";\nimport {MatSlideToggleModule} from \"@angular/material/slide-toggle\";\nimport {MatGridListModule} from \"@angular/material/grid-list\";\nimport {MatExpansionModule} from \"@angular/material/expansion\";\nimport {MatTabsModule} from \"@angular/material/tabs\";\n\nconst MaterialComponents = [\n    MatToolbarModule,\n    MatCardModule,\n    MatButtonModule,\n    MatMenuModule,\n    MatIconModule,\n    MatDividerModule,\n    MatListModule,\n    MatInputModule,\n    MatFormFieldModule,\n    MatChipsModule,\n    MatSlideToggleModule,\n    MatGridListModule,\n    MatExpansionModule,\n    MatTabsModule\n\n]\n\n@NgModule({\n    imports: [MaterialComponents],\n    exports: [MaterialComponents]\n})\n\nexport class MaterialModule {}",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "RxjsModule",
            "id": "module-RxjsModule-79a128bac556459ab725e0b87095267d9ffb8d12ce9fcdf202755e9bed245569077e88fc028a72dd062bef31b172e19a53ae01bb5005ad7ded351da729c9e0d2",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/sessions/rxjs/rxjs.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { RxjsRoutingModule } from './rxjs-routing.module';\nimport { RxjsComponent } from './rxjs.component';\nimport { RbacComponent } from './lesson-six/rbac/rbac.component';\nimport { UserInputComponent } from './lesson-six/user-input/user-input.component';\nimport { RoutingComponent } from './lesson-six/routing/routing.component';\nimport { SaveIndicatorComponent } from './lesson-six/save-indicator/save-indicator.component';\nimport { RxLinkComponent } from './lesson-six/operators-overview/rx-link/rx-link.component';\nimport { OperatorsOverviewComponent } from './lesson-six/operators-overview/operators-overview.component';\nimport { LessonSixComponent } from './lesson-six/lesson-six.component';\nimport { ReactiveComponent } from '../angular/lesson-one/reactive/reactive.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatButtonModule } from '@angular/material/button';\nimport { SharedModule } from '../../shared/shared.module';\nimport { LessonThreeComponent } from './lesson-three/lesson-three.component';\n\n@NgModule({\n  declarations: [\n    LessonThreeComponent,\n    RxjsComponent,\n    RbacComponent,\n    UserInputComponent,\n    RoutingComponent,\n    SaveIndicatorComponent,\n    RxLinkComponent,\n    OperatorsOverviewComponent,\n    LessonSixComponent,\n  ],\n  imports: [CommonModule, ReactiveFormsModule, MatToolbarModule, MatButtonModule, SharedModule, RxjsRoutingModule],\n})\nexport class RxjsModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "LessonSixComponent"
                        },
                        {
                            "name": "LessonThreeComponent"
                        },
                        {
                            "name": "OperatorsOverviewComponent"
                        },
                        {
                            "name": "RbacComponent"
                        },
                        {
                            "name": "RoutingComponent"
                        },
                        {
                            "name": "RxLinkComponent"
                        },
                        {
                            "name": "RxjsComponent"
                        },
                        {
                            "name": "SaveIndicatorComponent"
                        },
                        {
                            "name": "UserInputComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "RxjsRoutingModule"
                        },
                        {
                            "name": "SharedModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "RxjsRoutingModule",
            "id": "module-RxjsRoutingModule-627fb15ae71dacd4d54c050d300ebd3d2a8056956442edeab52643bf93d8251ae0768432d9d6edcf8ae7f65377cc0fc4bd216bb75d96baf9f720a57fcda117df",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/sessions/rxjs/rxjs-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { RxjsComponent } from './rxjs.component';\nimport { LessonThreeComponent } from './lesson-three/lesson-three.component';\nimport { LessonSixComponent } from './lesson-six/lesson-six.component';\nimport { OperatorsOverviewComponent } from './lesson-six/operators-overview/operators-overview.component';\nimport { RoutingComponent } from './lesson-six/routing/routing.component';\nimport { UserInputComponent } from './lesson-six/user-input/user-input.component';\nimport { RbacComponent } from './lesson-six/rbac/rbac.component';\nimport { SaveIndicatorComponent } from './lesson-six/save-indicator/save-indicator.component';\n\nconst routes: Routes = [\n  { path: '', component: RxjsComponent },\n  {\n    path: 'observables',\n    component: LessonThreeComponent,\n  },\n\n  {\n    path: 'operators',\n    component: LessonSixComponent,\n    children: [\n      {\n        path: 'operators-overview',\n        component: OperatorsOverviewComponent,\n      },\n      {\n        path: 'routing',\n        component: RoutingComponent,\n      },\n      {\n        path: 'user-input',\n        component: UserInputComponent,\n      },\n      {\n        path: 'rbac',\n        component: RbacComponent,\n      },\n      {\n        path: 'save-indicator',\n        component: SaveIndicatorComponent,\n      },\n      {\n        path: '**',\n        component: OperatorsOverviewComponent,\n      },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class RxjsRoutingModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "SharedModule",
            "id": "module-SharedModule-ee8b615f19d675e4dbb2e126944a79b3a9e75e0db3daf971ef955d1aabd321092c1559459bc041135b241e78cf95ee1f3f408affe7dfebbb5aec0d3c1d4da90e",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/shared/shared.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HighlightCodeDirective } from './highlight.directive';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatIconModule } from '@angular/material/icon';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { DojocardComponent } from './dojocard/dojocard.component';\n\n@NgModule({\n  declarations: [HighlightCodeDirective, DojocardComponent],\n  imports: [\n    CommonModule,\n    MatCardModule,\n    MatIconModule,\n    MatToolbarModule,\n    MatButtonModule,\n    ReactiveFormsModule,\n    MatSlideToggleModule,\n  ],\n  exports: [\n    HighlightCodeDirective,\n    MatCardModule,\n    MatIconModule,\n    MatSlideToggleModule,\n    ReactiveFormsModule,\n    MatToolbarModule,\n    MatButtonModule,\n  ],\n})\nexport class SharedModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "DojocardComponent"
                        },
                        {
                            "name": "HighlightCodeDirective"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "HighlightCodeDirective"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "context",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
            },
            {
                "name": "descriptionOfComplexObject",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/dojocard/DescriptionOfComplexObject.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  summary: 'string',\n  detail: \"it's a detailed description!\",\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.prod.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  production: true\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  production: false\n}"
            },
            {
                "name": "Large",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedIn",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedIn",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedInAsKevin",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedOut",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedOut",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "MaterialComponents",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/angular-material/material.module.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\n    MatToolbarModule,\n    MatCardModule,\n    MatButtonModule,\n    MatMenuModule,\n    MatIconModule,\n    MatDividerModule,\n    MatListModule,\n    MatInputModule,\n    MatFormFieldModule,\n    MatChipsModule,\n    MatSlideToggleModule,\n    MatGridListModule,\n    MatExpansionModule,\n    MatTabsModule\n\n]"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "require",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "literal type"
            },
            {
                "name": "Secondary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Small",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<Button>",
                "defaultValue": "(args: Button) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<Page>",
                "defaultValue": "(args: Page) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<Header>",
                "defaultValue": "(args: Header) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/dojocard/Dojo.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<DojocardComponent>",
                "defaultValue": "(args: DojocardComponent) => ({\n  props: args,\n  template: `<app-dojocard [title]=\"title\" [subtitle]=\"subtitle\" [user]=\"user\">\n{{userName}}\n{{userAge}}\n            <div content>content</div>\n            <div actions>\n                <button>hello</button>\n                <button>buy me now</button>\n            </div>\n        </app-dojocard>`,\n})"
            },
            {
                "name": "TemplateCounter",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/dojo-counter/Dojo-Counter.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<DojoCounterComponent>",
                "defaultValue": "(args: DojoCounterComponent) => ({\n  props: args,\n})"
            },
            {
                "name": "TemplateCounterBind",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/dojo-counter/Dojo-Counter.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "TemplateCounter.bind({})"
            },
            {
                "name": "TemplateWithOneButton",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/dojocard/Dojo.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<DojocardComponent>",
                "defaultValue": "(args: DojocardComponent) => ({\n  props: args,\n  template: `<app-dojocard [title]=\"title\" [subtitle]=\"subtitle\" [user]=\"user\">\n            <div content>content</div>\n            <div actions>\n                <button>hello</button>\n            </div>\n        </app-dojocard>`,\n})"
            },
            {
                "name": "TemplateWithOneButtonBind",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/dojocard/Dojo.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "TemplateWithOneButton.bind({})"
            },
            {
                "name": "userExmaple",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/dojocard/Dojo.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "User",
                "defaultValue": "{\n  name: 'adam',\n  age: 99,\n}"
            },
            {
                "name": "WithoutSubtitle",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/dojocard/Dojo.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "WithSubtitle",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/dojocard/Dojo.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            }
        ],
        "functions": [],
        "typealiases": [],
        "enumerations": [
            {
                "name": "MultiStepEnum",
                "childs": [
                    {
                        "name": "FIRST",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "first"
                    },
                    {
                        "name": "SECOND",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "second"
                    },
                    {
                        "name": "THIRD",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "third"
                    },
                    {
                        "name": "FOURTH",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "fourth"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/app/sessions/angular/lesson-four/multi-step-animation/multi-step-animation.component.ts"
            }
        ],
        "groupedVariables": {
            "src/test.ts": [
                {
                    "name": "context",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
                },
                {
                    "name": "require",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type"
                }
            ],
            "src/app/shared/dojocard/DescriptionOfComplexObject.ts": [
                {
                    "name": "descriptionOfComplexObject",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/dojocard/DescriptionOfComplexObject.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  summary: 'string',\n  detail: \"it's a detailed description!\",\n}"
                }
            ],
            "src/environments/environment.prod.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.prod.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  production: true\n}"
                }
            ],
            "src/environments/environment.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  production: false\n}"
                }
            ],
            "src/stories/Button.stories.ts": [
                {
                    "name": "Large",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Secondary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Small",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<Button>",
                    "defaultValue": "(args: Button) => ({\n  props: args,\n})"
                }
            ],
            "src/stories/Page.stories.ts": [
                {
                    "name": "LoggedIn",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "LoggedOut",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<Page>",
                    "defaultValue": "(args: Page) => ({\n  props: args,\n})"
                }
            ],
            "src/stories/Header.stories.ts": [
                {
                    "name": "LoggedIn",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "LoggedInAsKevin",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "LoggedOut",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<Header>",
                    "defaultValue": "(args: Header) => ({\n  props: args,\n})"
                }
            ],
            "src/app/angular-material/material.module.ts": [
                {
                    "name": "MaterialComponents",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/angular-material/material.module.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\n    MatToolbarModule,\n    MatCardModule,\n    MatButtonModule,\n    MatMenuModule,\n    MatIconModule,\n    MatDividerModule,\n    MatListModule,\n    MatInputModule,\n    MatFormFieldModule,\n    MatChipsModule,\n    MatSlideToggleModule,\n    MatGridListModule,\n    MatExpansionModule,\n    MatTabsModule\n\n]"
                }
            ],
            "src/app/shared/dojocard/Dojo.stories.ts": [
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/dojocard/Dojo.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<DojocardComponent>",
                    "defaultValue": "(args: DojocardComponent) => ({\n  props: args,\n  template: `<app-dojocard [title]=\"title\" [subtitle]=\"subtitle\" [user]=\"user\">\n{{userName}}\n{{userAge}}\n            <div content>content</div>\n            <div actions>\n                <button>hello</button>\n                <button>buy me now</button>\n            </div>\n        </app-dojocard>`,\n})"
                },
                {
                    "name": "TemplateWithOneButton",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/dojocard/Dojo.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<DojocardComponent>",
                    "defaultValue": "(args: DojocardComponent) => ({\n  props: args,\n  template: `<app-dojocard [title]=\"title\" [subtitle]=\"subtitle\" [user]=\"user\">\n            <div content>content</div>\n            <div actions>\n                <button>hello</button>\n            </div>\n        </app-dojocard>`,\n})"
                },
                {
                    "name": "TemplateWithOneButtonBind",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/dojocard/Dojo.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "TemplateWithOneButton.bind({})"
                },
                {
                    "name": "userExmaple",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/dojocard/Dojo.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "User",
                    "defaultValue": "{\n  name: 'adam',\n  age: 99,\n}"
                },
                {
                    "name": "WithoutSubtitle",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/dojocard/Dojo.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "WithSubtitle",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/dojocard/Dojo.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                }
            ],
            "src/app/shared/dojo-counter/Dojo-Counter.stories.ts": [
                {
                    "name": "TemplateCounter",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/dojo-counter/Dojo-Counter.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<DojoCounterComponent>",
                    "defaultValue": "(args: DojoCounterComponent) => ({\n  props: args,\n})"
                },
                {
                    "name": "TemplateCounterBind",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/dojo-counter/Dojo-Counter.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "TemplateCounter.bind({})"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {
            "src/app/sessions/angular/lesson-four/multi-step-animation/multi-step-animation.component.ts": [
                {
                    "name": "MultiStepEnum",
                    "childs": [
                        {
                            "name": "FIRST",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "first"
                        },
                        {
                            "name": "SECOND",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "second"
                        },
                        {
                            "name": "THIRD",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "third"
                        },
                        {
                            "name": "FOURTH",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "fourth"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/app/sessions/angular/lesson-four/multi-step-animation/multi-step-animation.component.ts"
                }
            ]
        },
        "groupedTypeAliases": {}
    },
    "routes": {
        "name": "<root>",
        "kind": "module",
        "className": "AppModule",
        "children": [
            {
                "name": "routes",
                "filename": "src/app/app-routing.module.ts",
                "module": "AppRoutingModule",
                "children": [
                    {
                        "path": "",
                        "component": "HomeComponent"
                    },
                    {
                        "path": "session/css/grid-and-flexbox",
                        "component": "LessonTwoComponent"
                    },
                    {
                        "path": "session/rxjs",
                        "loadChildren": "./sessions/rxjs/rxjs.module#RxjsModule",
                        "children": [
                            {
                                "kind": "module",
                                "children": [
                                    {
                                        "name": "routes",
                                        "filename": "src/app/sessions/rxjs/rxjs-routing.module.ts",
                                        "module": "RxjsRoutingModule",
                                        "children": [
                                            {
                                                "path": "",
                                                "component": "RxjsComponent"
                                            },
                                            {
                                                "path": "observables",
                                                "component": "LessonThreeComponent"
                                            },
                                            {
                                                "path": "operators",
                                                "component": "LessonSixComponent",
                                                "children": [
                                                    {
                                                        "path": "operators-overview",
                                                        "component": "OperatorsOverviewComponent"
                                                    },
                                                    {
                                                        "path": "routing",
                                                        "component": "RoutingComponent"
                                                    },
                                                    {
                                                        "path": "user-input",
                                                        "component": "UserInputComponent"
                                                    },
                                                    {
                                                        "path": "rbac",
                                                        "component": "RbacComponent"
                                                    },
                                                    {
                                                        "path": "save-indicator",
                                                        "component": "SaveIndicatorComponent"
                                                    },
                                                    {
                                                        "path": "**",
                                                        "component": "OperatorsOverviewComponent"
                                                    }
                                                ]
                                            }
                                        ],
                                        "kind": "module"
                                    }
                                ],
                                "module": "RxjsModule"
                            }
                        ]
                    },
                    {
                        "path": "session/angular",
                        "loadChildren": "./sessions/angular/angular.module#AngularModule",
                        "children": [
                            {
                                "kind": "module",
                                "children": [
                                    {
                                        "name": "routes",
                                        "filename": "src/app/sessions/angular/angular-routing.module.ts",
                                        "module": "AngularRoutingModule",
                                        "children": [
                                            {
                                                "path": "",
                                                "component": "AngularComponent"
                                            },
                                            {
                                                "path": "forms",
                                                "component": "LessonOneComponent"
                                            },
                                            {
                                                "path": "animations",
                                                "component": "LessonFourComponent"
                                            },
                                            {
                                                "path": "material",
                                                "component": "LessonFiveComponent",
                                                "children": [
                                                    {
                                                        "path": "am-overview",
                                                        "component": "AmOverviewComponent"
                                                    },
                                                    {
                                                        "path": "am-typography",
                                                        "component": "AmTypographyComponent"
                                                    },
                                                    {
                                                        "path": "am-components",
                                                        "component": "AmComponentsComponent"
                                                    },
                                                    {
                                                        "path": "**",
                                                        "component": "AmOverviewComponent"
                                                    }
                                                ]
                                            }
                                        ],
                                        "kind": "module"
                                    }
                                ],
                                "module": "AngularModule"
                            }
                        ]
                    }
                ],
                "kind": "module"
            }
        ]
    },
    "coverage": {
        "count": 1,
        "status": "low",
        "files": [
            {
                "filePath": "src/app/angular-material/material.module.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "MaterialComponents",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/home/home.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HomeComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/lesson-two/css-layout-example-flex/css-layout-example-flex.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CssLayoutExampleFlexComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/lesson-two/css-layout-example-grid/css-layout-example-grid.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CssLayoutExampleGridComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/lesson-two/lesson-two.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LessonTwoComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/models/lesson.model.ts",
                "type": "class",
                "linktype": "classe",
                "name": "Lesson",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/sessions/angular/angular.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AngularComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/sessions/angular/lesson-five/am-components/am-components.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AmComponentsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/sessions/angular/lesson-five/am-overview/am-overview.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AmOverviewComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/sessions/angular/lesson-five/am-typography/am-typography.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AmTypographyComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/sessions/angular/lesson-five/lesson-five.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LessonFiveComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/sessions/angular/lesson-four/lesson-four.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LessonFourComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/sessions/angular/lesson-four/multi-step-animation/multi-step-animation.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "MultiStepAnimationComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/sessions/angular/lesson-four/sequential-animation/sequential-animation.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SequentialAnimationComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/sessions/angular/lesson-four/simple-animation/simple-animation.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SimpleAnimationComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/sessions/angular/lesson-one/lesson-one.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LessonOneComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/sessions/angular/lesson-one/reactive-form-array/reactive-form-array.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ReactiveFormArrayComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/sessions/angular/lesson-one/reactive/reactive.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ReactiveComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/sessions/angular/lesson-one/template-driven-form-array-like/template-driven-form-array-like.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TemplateDrivenFormArrayLikeComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/sessions/angular/lesson-one/template-driven/template-driven.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TemplateDrivenComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/sessions/rxjs/lesson-six/lesson-six.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LessonSixComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/sessions/rxjs/lesson-six/operators-overview/operators-overview.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "OperatorsOverviewComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/sessions/rxjs/lesson-six/operators-overview/rx-link/rx-link.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "RxLinkComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/sessions/rxjs/lesson-six/rbac/rbac.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "RbacComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/sessions/rxjs/lesson-six/routing/routing.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "RoutingComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/sessions/rxjs/lesson-six/save-indicator/save-indicator.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SaveIndicatorComponent",
                "coveragePercent": 9,
                "coverageCount": "1/11",
                "status": "low"
            },
            {
                "filePath": "src/app/sessions/rxjs/lesson-six/user-input/search.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "SearchService",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/sessions/rxjs/lesson-six/user-input/user-input.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "UserInputComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/sessions/rxjs/lesson-three/lesson-three.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LessonThreeComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/sessions/rxjs/rxjs.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "RxjsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/dojo-counter/Dojo-Counter.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "TemplateCounter",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/dojo-counter/Dojo-Counter.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "TemplateCounterBind",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/dojo-counter/dojo-counter.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DojoCounterComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/dojocard/DescriptionOfComplexObject.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "descriptionOfComplexObject",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/dojocard/Dojo.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/dojocard/Dojo.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "TemplateWithOneButton",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/dojocard/Dojo.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "TemplateWithOneButtonBind",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/dojocard/Dojo.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "userExmaple",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/dojocard/Dojo.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithoutSubtitle",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/dojocard/Dojo.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithSubtitle",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/dojocard/dojocard.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DojocardComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/highlight.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "HighlightCodeDirective",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.prod.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Large",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Secondary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Small",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedIn",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedInAsKevin",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedOut",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedIn",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedOut",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/User.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "User",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/stories/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonComponent",
                "coveragePercent": 83,
                "coverageCount": "5/6",
                "status": "very-good"
            },
            {
                "filePath": "src/stories/header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HeaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/stories/page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "context",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "require",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}